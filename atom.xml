<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Jifeng Wu&#39;s Personal Website</title>
  
  <subtitle>Jifeng Wu&#39;s Personal Website</subtitle>
  <link href="https://jifengwu2k.github.io/atom.xml" rel="self"/>
  
  <link href="https://jifengwu2k.github.io/"/>
  <updated>2025-10-04T16:34:01.150Z</updated>
  <id>https://jifengwu2k.github.io/</id>
  
  <author>
    <name>Jifeng Wu</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Using Jupyter Lab as a Lightweight Remote Desktop</title>
    <link href="https://jifengwu2k.github.io/2025/10/04/Using-Jupyter-Lab-as-a-Lightweight-Remote-Desktop/"/>
    <id>https://jifengwu2k.github.io/2025/10/04/Using-Jupyter-Lab-as-a-Lightweight-Remote-Desktop/</id>
    <published>2025-10-04T04:00:00.000Z</published>
    <updated>2025-10-04T16:34:01.150Z</updated>
    
    <content type="html"><![CDATA[<h1 id="using-jupyter-lab-as-a-lightweight-remote-desktop">Using JupyterLab as a Lightweight Remote Desktop</h1><p>Jupyter Lab isn't just for data scince - it's a powerful all-in-oneenvironment offering:</p><ul><li>Programming (Python, R, etc.)</li><li>Shell Access</li><li>File Browser &amp; Editor</li><li>Plugins</li></ul><p>All within your browser, without heavy windowing systems or VNC,making it a great alternative to traditional remote desktops!</p><h2 id="setup-instructions">Setup Instructions</h2><h3 id="server-side">Server Side</h3><p>First, <ahref="/2025/07/10/Managing-Development-Environments-with-Conda/">installConda and set up a Conda environment</a>.</p><h4 id="install-jupyter-lab">Install Jupyter Lab</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">conda install -c conda-forge jupyterlab<br></code></pre></td></tr></table></figure><p>Install kernels for Jupyter Lab:</p><p>Python (IPyKernel):</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">conda install -c conda-forge ipykernel<br></code></pre></td></tr></table></figure><p>R (IRKernel):</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">conda install -c conda-forge r-irkernel<br></code></pre></td></tr></table></figure><h4 id="launch-jupyter-lab-and-make-it-accessible">Launch Jupyter Laband Make it accessible</h4><p>Start a <code>tmux</code> session.</p><p>Start JupyterLab in it, listening on localhost, with nopassword/token:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">jupyter lab --ip=127.0.0.1 --no-browser --NotebookApp.token=<span class="hljs-string">&#x27;&#x27;</span> --NotebookApp.password=<span class="hljs-string">&#x27;&#x27;</span><br></code></pre></td></tr></table></figure><p>Then open another <code>tmux</code> pane, set up <ahref="https://github.com/jifengwu2k/push-pull-port">push-pull-port</a>,and push SSH port 22 to port <code>$PUBLIC_PORT</code> of remote publicserver <code>$PUBLIC_HOST</code>:</p><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs perl">sh <span class="hljs-keyword">push</span>-<span class="hljs-keyword">local</span>-port.sh -l <span class="hljs-number">22</span> -r $PUBLIC_PORT -u $PUBLIC_USER -h $PUBLIC_HOST <br></code></pre></td></tr></table></figure><p>Then detach from the <code>tmux</code> session.</p><h3 id="client-side">Client Side</h3><p>Set up <ahref="https://github.com/jifengwu2k/push-pull-port">push-pull-port</a>.</p><p>Pull the remote port and forward it to your local <code>8888</code>port:</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs stylus">sh pull-remote-port<span class="hljs-selector-class">.sh</span> -r <span class="hljs-number">8888</span> -l <span class="hljs-number">8888</span> -u <span class="hljs-variable">$PRIVATE_USER</span> -h <span class="hljs-variable">$PUBLIC_HOST</span> -<span class="hljs-selector-tag">p</span> <span class="hljs-variable">$PUBLIC_PORT</span><br></code></pre></td></tr></table></figure><p>Access in Browser: Open <ahref="http://localhost:8888/lab">http://localhost:8888/lab</a>.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;using-jupyter-lab-as-a-lightweight-remote-desktop&quot;&gt;Using Jupyter
Lab as a Lightweight Remote Desktop&lt;/h1&gt;
&lt;p&gt;Jupyter Lab isn&#39;t just </summary>
      
    
    
    
    <category term="Environments" scheme="https://jifengwu2k.github.io/categories/Environments/"/>
    
    
  </entry>
  
  <entry>
    <title>2025-09 Financial Statement</title>
    <link href="https://jifengwu2k.github.io/2025/10/04/2025-09-Financial-Statement/"/>
    <id>https://jifengwu2k.github.io/2025/10/04/2025-09-Financial-Statement/</id>
    <published>2025-10-04T04:00:00.000Z</published>
    <updated>2025-10-04T17:27:33.971Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs csv">date,name,amount<br>2025-09-01,Cornell Universi NBS REFUND Monthly Dividend,3195.846<br>2025-09-01,ETSY, INC. ETSY.COM*BU BROOKLYN NY,-2.70<br>2025-08-31,GANNETT MEDIA CO 888-426-0491 VA,-1.00<br>2025-09-02,Payment to Chase card ending in &lt;redacted&gt;,-200.00<br>2025-09-02,MIDJOURNEY INC. MIDJOURNEY.CO CA,-10.80<br>2025-09-03,WALMART.COM 800-925-6278 AR,-17.14<br>2025-09-03,MIDJOURNEY INC. MIDJOURNEY.CO CA,-103.68<br>2025-09-04,WALMART.COM 800-925-6278 AR,-82.54<br>2025-09-03,WMT PLUS Sep 2025 800-925-6278 AR,-2.99<br>2025-09-07,Coinbase Oakland CA,-20.00<br>2025-09-08,Payment to Chase card ending in &lt;redacted&gt;,-40.00<br>2025-09-07,WALMART.COM 800-925-6278 AR,-45.47<br>2025-09-10,Payment to Chase card ending in &lt;redacted&gt;,-118.49<br>2025-09-10,WALMART.COM 800-925-6278 AR,-10.70<br>2025-09-12,APPLE.COM/BILL 866-712-7753 CA,-10.99<br>2025-09-12,Payment to Chase card ending in &lt;redacted&gt;,-26.40<br>2025-09-12,WALMART.COM 800-925-6278 AR,-42.48<br>2025-09-15,Payment to Chase card ending in &lt;redacted&gt;,-1668.52<br>2025-09-15,Zelle payment from &lt;redacted&gt;,14.20<br>2025-09-17,Payment to Chase card ending in &lt;redacted&gt;,-170.00<br>2025-09-18,OPENAI OPENAI.COM CA,-10.03<br>2025-09-20,OPENAI OPENAI.COM CA,-45.07<br>2025-09-20,USPS CHANGE OF ADDRESS 800-238-3150 TN,-1.25<br>2025-09-22,Payment to Chase card ending in &lt;redacted&gt;,-118.35<br>2025-09-22,Zelle payment to &lt;redacted&gt;,-15.00<br>2025-09-23,Payment to Chase card ending in &lt;redacted&gt;,-240.69<br>2025-09-29,Payment to Chase card ending in &lt;redacted&gt;,-220.00<br>2025-09-29,Payment to Chase card ending in &lt;redacted&gt;,-29.95<br>2025-09-29,Zelle payment to &lt;redacted&gt;,-28.00<br></code></pre></td></tr></table></figure><p>Total Net: -72.19</p>]]></content>
    
    
      
      
    <summary type="html">&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span c</summary>
      
    
    
    
    <category term="Financial Statements" scheme="https://jifengwu2k.github.io/categories/Financial-Statements/"/>
    
    
  </entry>
  
  <entry>
    <title>Shell Coding Guidelines</title>
    <link href="https://jifengwu2k.github.io/2025/09/28/Shell-Coding-Guidelines/"/>
    <id>https://jifengwu2k.github.io/2025/09/28/Shell-Coding-Guidelines/</id>
    <published>2025-09-28T04:00:00.000Z</published>
    <updated>2025-10-06T02:05:28.913Z</updated>
    
    <content type="html"><![CDATA[<h2 id="removing-suffix-by-separator">Removing Suffix by Separator</h2><p>Want to strip off everything after the <strong>first or lastoccurrence</strong> of a separator in a string? Suppose your string is<code>$string</code> and the separator is <code>$separator</code>:</p><p>Before the <strong>first</strong> occurrence:</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">result=<span class="hljs-string">&quot;<span class="hljs-variable">$&#123;string%%&quot;$separator&quot;*&#125;</span>&quot;</span><br></code></pre></td></tr></table></figure><p>Before the <strong>last</strong> occurrence:</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">result=<span class="hljs-string">&quot;<span class="hljs-variable">$&#123;string%&quot;$separator&quot;*&#125;</span>&quot;</span><br></code></pre></td></tr></table></figure><p>Example:</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs sh">string=<span class="hljs-string">&#x27;abc-def-ghi&#x27;</span><br>separator=<span class="hljs-string">&#x27;-&#x27;</span><br><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;<span class="hljs-variable">$&#123;string%%&quot;$separator&quot;*&#125;</span>&quot;</span>  <span class="hljs-comment"># Outputs: abc</span><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;<span class="hljs-variable">$&#123;string%&quot;$separator&quot;*&#125;</span>&quot;</span>   <span class="hljs-comment"># Outputs: abc-def</span><br></code></pre></td></tr></table></figure><h2 id="appending-content-to-a-command-pipeline">Appending Content to aCommand Pipeline</h2><p>Suppose you have a file and want to process its contents, then appendmore data before passing it all to the next part of a pipeline. The mostrobust, portable (POSIX-compliant) solution is:</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">&#123; <span class="hljs-built_in">cat</span> file.txt; <span class="hljs-built_in">echo</span> <span class="hljs-string">&#x27;additional content&#x27;</span>; &#125; | your_next_command<br></code></pre></td></tr></table></figure><p>Why this works:</p><ul><li><code>&#123; ...; &#125;</code> groups commands together in the currentshell.</li><li>The pipe (<code>|</code>) passes their combined output.</li><li>This does not create unnecessary subshells and works in all POSIXshells.</li></ul><p><strong>Syntax tip:</strong> A space is required after <code>&#123;</code>and the last command must end in a semicolon (<code>;</code>) before theclosing <code>&#125;</code>.</p><h2 id="safely-using-find-xargs-with-filenames">Safely Using<code>find</code> + <code>xargs</code> with Filenames</h2><p>Using <code>find</code> + <code>xargs</code> with filenames can breakwhen filenames have spaces or special characters. To handle this safely,use null (<code>\0</code>) terminators:</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">find mydir -name <span class="hljs-string">&#x27;*.txt&#x27;</span> -print0 | xargs -0 <span class="hljs-built_in">rm</span><br></code></pre></td></tr></table></figure><ul><li><code>-print0</code> makes <code>find</code> use a null character atthe end of each filename.</li><li><code>-0</code> tells <code>xargs</code> to expect null-delimitedinput.</li></ul><p>This combination ensures even weird filenames (with spaces, newlines,quotes, etc.) are handled safely.</p><h2 id="batch-killing-processes">Batch Killing Processes</h2><p>Sometimes we acidentally spawn a series of processes, and we want tokill them. We can look up their pid's through<code>ps -aux | grep &lt;process_name&gt;</code> (as shown below) andmanually run the <code>kill</code> command to kill each process byproviding its pid, but <em>how can we automate this tedioustask</em>?</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs sh">$ ps aux | grep pipreqs<br>jifengwu   58180  0.0  0.1  46440 27332 pts/0    T    13:38   0:00 /home/jifengwu/miniconda3/envs/dataset_investigation/bin/python /home/jifengwu/miniconda3/envs/dataset_investigation/bin/pipreqs repos/spectria/tildes/tildes --mode no-pin<br>jifengwu   58205  0.1  0.1  48140 29392 pts/0    T    13:38   0:00 /home/jifengwu/miniconda3/envs/dataset_investigation/bin/python /home/jifengwu/miniconda3/envs/dataset_investigation/bin/pipreqs repos/PnX-SI/GeoNature --mode no-pin<br>jifengwu   58224  5.7  0.2  51856 33108 pts/0    T    13:38   0:23 /home/jifengwu/miniconda3/envs/dataset_investigation/bin/python /home/jifengwu/miniconda3/envs/dataset_investigation/bin/pipreqs repos/fabiandevia/home --mode no-pin<br>jifengwu   58267  4.4  0.2  57880 38204 pts/0    T    13:39   0:17 /home/jifengwu/miniconda3/envs/dataset_investigation/bin/python /home/jifengwu/miniconda3/envs/dataset_investigation/bin/pipreqs repos/377312117/gitproject --mode no-pin<br>jifengwu   58272  2.3  0.2  53756 34252 pts/0    T    13:39   0:08 /home/jifengwu/miniconda3/envs/dataset_investigation/bin/python /home/jifengwu/miniconda3/envs/dataset_investigation/bin/pipreqs repos/crazyfish1111/home --mode no-pin<br>jifengwu   58282  0.1  0.1  47840 28132 pts/0    T    13:39   0:00 /home/jifengwu/miniconda3/envs/dataset_investigation/bin/python /home/jifengwu/miniconda3/envs/dataset_investigation/bin/pipreqs repos/Piratenpartei/ekklesia-portal --mode no-pin<br>jifengwu   58295  0.1  0.1  48220 28492 pts/0    T    13:39   0:00 /home/jifengwu/miniconda3/envs/dataset_investigation/bin/python /home/jifengwu/miniconda3/envs/dataset_investigation/bin/pipreqs repos/jauhararifin/ugrade/server --mode no-pin<br>jifengwu   58659  0.3  0.1  48608 29324 pts/0    T    13:41   0:00 /home/jifengwu/miniconda3/envs/dataset_investigation/bin/python /home/jifengwu/miniconda3/envs/dataset_investigation/bin/pipreqs repos/klen/pylama --mode no-pin<br>jifengwu   59564  0.0  0.0  19612  2516 pts/2    S+   13:45   0:00 grep --color=auto pipreqs<br></code></pre></td></tr></table></figure><p>First, we can add <code>grep -v grep</code> to the pipe to <em>hidethe grep processes from the output</em>:</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs sh">$ ps aux | grep pipreqs | grep -v grep<br>jifengwu   58180  0.0  0.1  46440 27332 pts/0    T    13:38   0:00 /home/jifengwu/miniconda3/envs/dataset_investigation/bin/python /home/jifengwu/miniconda3/envs/dataset_investigation/bin/pipreqs repos/spectria/tildes/tildes --mode no-pin<br>jifengwu   58205  0.1  0.1  48140 29392 pts/0    T    13:38   0:00 /home/jifengwu/miniconda3/envs/dataset_investigation/bin/python /home/jifengwu/miniconda3/envs/dataset_investigation/bin/pipreqs repos/PnX-SI/GeoNature --mode no-pin<br>jifengwu   58224  5.6  0.2  51856 33108 pts/0    T    13:38   0:23 /home/jifengwu/miniconda3/envs/dataset_investigation/bin/python /home/jifengwu/miniconda3/envs/dataset_investigation/bin/pipreqs repos/fabiandevia/home --mode no-pin<br>jifengwu   58267  4.4  0.2  57880 38204 pts/0    T    13:39   0:17 /home/jifengwu/miniconda3/envs/dataset_investigation/bin/python /home/jifengwu/miniconda3/envs/dataset_investigation/bin/pipreqs repos/377312117/gitproject --mode no-pin<br>jifengwu   58272  2.2  0.2  53756 34252 pts/0    T    13:39   0:08 /home/jifengwu/miniconda3/envs/dataset_investigation/bin/python /home/jifengwu/miniconda3/envs/dataset_investigation/bin/pipreqs repos/crazyfish1111/home --mode no-pin<br>jifengwu   58282  0.1  0.1  47840 28132 pts/0    T    13:39   0:00 /home/jifengwu/miniconda3/envs/dataset_investigation/bin/python /home/jifengwu/miniconda3/envs/dataset_investigation/bin/pipreqs repos/Piratenpartei/ekklesia-portal --mode no-pin<br>jifengwu   58295  0.1  0.1  48220 28492 pts/0    T    13:39   0:00 /home/jifengwu/miniconda3/envs/dataset_investigation/bin/python /home/jifengwu/miniconda3/envs/dataset_investigation/bin/pipreqs repos/jauhararifin/ugrade/server --mode no-pin<br>jifengwu   58659  0.3  0.1  48608 29324 pts/0    T    13:41   0:00 /home/jifengwu/miniconda3/envs/dataset_investigation/bin/python /home/jifengwu/miniconda3/envs/dataset_investigation/bin/pipreqs repos/klen/pylama --mode no-pin<br></code></pre></td></tr></table></figure><p>Then, we can add <code>awk '&#123;print $2&#125;'</code> to the pipe to invoke<code>awk</code> to <em>trim the second space-delimited component</em>(which in this case is the pid). Now we have a list of the pid's of theprocesses we want to kill:</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs sh">$ ps aux | grep pipreqs | grep -v grep | awk <span class="hljs-string">&#x27;&#123;print $2&#125;&#x27;</span><br>58180<br>58205<br>58224<br>58267<br>58272<br>58282<br>58295<br>58659<br></code></pre></td></tr></table></figure><p>Finally, we can iterate over the pid's in a for-loop to killthem.</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-keyword">for</span> pid <span class="hljs-keyword">in</span> $(ps aux | grep pipreqs | grep -v grep | awk <span class="hljs-string">&#x27;&#123;print $2&#125;&#x27;</span>)<br><span class="hljs-keyword">do</span><br>    <span class="hljs-built_in">kill</span> -15 <span class="hljs-variable">$pid</span><br><span class="hljs-keyword">done</span><br></code></pre></td></tr></table></figure><h2 id="copying-files-via-cat-and-dd">Copying Files via <code>cat</code>and <code>dd</code></h2><p><code>cat</code> and <code>dd</code> are standard Unix utilities forhandling file data.</p><ul><li><code>cat</code> outputs the contents of a file to<code>stdout</code>.</li><li><code>dd</code> reads <code>stdin</code> (if no <code>if=</code>)and writes to <code>stdout</code> or a file.</li></ul><p>To copy a file, you can use a Unix pipe (<code>|</code>) to send<code>cat</code>'s output to <code>dd</code>, then write to adestination file:</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-built_in">cat</span> sourcefile | <span class="hljs-built_in">dd</span> of=destinationfile<br></code></pre></td></tr></table></figure><h3 id="potential-advantages-of-cat-and-dd-over-cp">Potential Advantagesof <code>cat</code> and <code>dd</code> Over <code>cp</code></h3><h4 id="better-progressstatistics"><strong>Betterprogress/statistics</strong></h4><ul><li><code>dd</code> with the <code>status=progress</code> (GNU dd)option shows live copy statistics: <figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">cat bigfile | dd <span class="hljs-attribute">of</span>=outfile <span class="hljs-attribute">status</span>=progress<br></code></pre></td></tr></table></figure></li></ul><h4 id="working-around-cp-limitations"><strong>Working Around<code>cp</code> Limitations</strong></h4><ul><li>Some device files, file descriptors, or pseudo-files (like<code>/proc</code> or <code>/sys</code>) do not support <code>cp</code>,but streaming with <code>cat</code> + <code>dd</code> may work.</li></ul><h2 id="parsing-command-line-options">Parsing Command-line Options</h2><p><code>getopts</code> is a built-in Unix shell command for parsingcommand-line options. It is a wrapper around <code>getopt</code>, aPOSIX C library function used to parse command-line options of theUnix/POSIX style. Specifically:</p><ul><li>Options are <em>single-character alphanumerics</em> preceded by a -(hyphen-minus) character, i.e. <code>-a</code>. <code>-b</code>,<code>-c</code>.</li><li>Options can take an argument or none.</li><li>Multiple options can be chained together, as long as the non-lastones are not argument-taking. If <code>-a</code> and <code>-b</code>take no arguments while <code>-c</code> takes an argument,<code>-abc foo</code> is the same as <code>-a -c -e foo</code>, but<code>-bca</code> is not the same as <code>-b -c a</code> due to thepreceding rule.</li><li>When an option takes an argument, this can be in the same token orin the next one. In other words, if <code>-c</code> takes an argument,<code>-cfoo</code> is the same as <code>-c foo</code>.</li></ul><h3 id="optstrings"><code>optstring</code>'s</h3><p>Both getopt and getopts specifies specify options using a<em>optstring</em>. Specifically:</p><ul><li><em>Begin an optstring with <code>:</code>.</em></li><li>To specify an option that <em>does not take an argument</em>, appendits name to the optstring.</li><li>To specify an option that <em>takes an argument</em>, append itsname <em>and <code>:</code></em> to the optstring.</li></ul><p>For example, the optstring that specifies two options<code>-a</code>, <code>-b</code> that do not take arguments and twooptions <code>-c</code>, <code>-d</code> that take arguments is<code>:abc:d:</code>.</p><h3 id="using-getopts-in-a-shell-script">Using <code>getopts</code> in aShell Script</h3><p>In Shell scripts, <code>getopts</code> invoked with an<code>optstring</code> is used with a <code>while</code>-loop to parsecommand-line options.</p><p>Say that our Shell script <code>test_getopts.sh</code> accepts twooptions <code>-a</code>, <code>-b</code> that do not take arguments andtwo options <code>-c</code>, <code>-d</code> that take arguments. OurShell script can look like this:</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-meta">#!/bin/sh</span><br><br><span class="hljs-keyword">while</span> <span class="hljs-built_in">getopts</span> <span class="hljs-string">&#x27;:abc:d:&#x27;</span> name<br><span class="hljs-keyword">do</span><br>    <span class="hljs-keyword">case</span> <span class="hljs-variable">$name</span> <span class="hljs-keyword">in</span><br>        a)<br>            <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;You provided option -a&quot;</span><br>            ;;<br>        b)<br>            <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;You provided option -b&quot;</span><br>            ;;<br>        c)<br>            <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;You provided option -c with argument <span class="hljs-variable">$OPTARG</span>&quot;</span><br>            ;;<br>        d)<br>            <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;You provided option -d with argument <span class="hljs-variable">$OPTARG</span>&quot;</span><br>            ;;<br>        :)<br>            <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;Option -<span class="hljs-variable">$OPTARG</span> requires an argument&quot;</span><br>            ;;<br>        ?)<br>            <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;You provided an invalid option -<span class="hljs-variable">$OPTARG</span>&quot;</span><br>            ;;<br>    <span class="hljs-keyword">esac</span><br><span class="hljs-keyword">done</span><br></code></pre></td></tr></table></figure><p>Here, <code>getopts</code> is invoked with the <code>optstring</code>for specifying our options, <code>:abc:d:</code>. In each iteration ofthe <code>while</code>-loop, the <em>next option</em> is parsed and theShell variables <code>name</code> and <code>OPTARG</code> are set todifferent values based on different conditions we may encounter.</p><ul><li>If a <em>valid</em> option is detected and that option <em>does nottake an argument</em>, the Shell variable <code>name</code> is set tothe name of the option.</li><li>If a <em>valid</em> option is detected and that option <em>takes anargument</em>:<ul><li>If we have provided an argument, the Shell variable<code>name</code> is set to the name of the option, and the Shellvariable <code>OPTARG</code> is set to the value of the argument.</li><li>If we <em>haven't provided an argument</em>, <em>the Shell variable<code>name</code> is set to <code>:</code>, and the Shell variable<code>OPTARG</code> is set to the name of the argument</em>.</li></ul></li><li>If an <em>invalid</em> option is detected, <em>the Shell variable<code>name</code> is set to <code>?</code>, and the Shell variable<code>OPTARG</code> is set to the name of the argument</em>.</li></ul><p>We can see <code>getopts</code> at work by providing differentcommand-line options when invoking our Shell script.</p><p>Providing no command-line options:</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">$ sh test_getopts.sh<br></code></pre></td></tr></table></figure><p>Providing option <code>-a</code> that do not take arguments:</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh">$ sh test_getopts.sh -a<br>You provided option -a<br></code></pre></td></tr></table></figure><p>Providing option <code>-a</code> that do not take arguments<em>twice</em>:</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs sh">$ sh test_getopts.sh -a -a<br>You provided option -a<br>You provided option -a<br>$ sh test_getopts.sh -aa<br>You provided option -a<br>You provided option -a<br></code></pre></td></tr></table></figure><p>Providing option <code>-c</code> that takes an argument with anargument <code>foo</code>:</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh">$ sh test_getopts.sh -c foo<br>You provided option -c with argument foo<br></code></pre></td></tr></table></figure><p>Providing option <code>-c</code> that takes an argument with anargument <code>foo</code> <em>twice</em>:</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sh">$ sh test_getopts.sh -c foo -c bar<br>You provided option -c with argument foo<br>You provided option -c with argument bar<br></code></pre></td></tr></table></figure><p>Providing option <code>-c</code> that takes an argument without anargument:</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh">$ sh test_getopts.sh -c<br>Option -c requires an argument<br></code></pre></td></tr></table></figure><p>Providing an invalid argument <code>-e</code>:</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh">$ sh test_getopts.sh -e<br>You provided an invalid option -e<br></code></pre></td></tr></table></figure><h3 id="references">References</h3><ul><li>https://www.baeldung.com/linux/grep-exclude-ps-results</li><li>https://stackoverflow.com/questions/46008880/how-to-always-cut-the-pid-from-ps-aux-command</li><li>https://en.wikipedia.org/wiki/Getopts</li><li>https://pubs.opengroup.org/onlinepubs/9699919799/utilities/getopts.html</li><li>https://en.wikipedia.org/wiki/Getopt</li><li>https://pubs.opengroup.org/onlinepubs/9699919799/basedefs/V1_chap12.html</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;removing-suffix-by-separator&quot;&gt;Removing Suffix by Separator&lt;/h2&gt;
&lt;p&gt;Want to strip off everything after the &lt;strong&gt;first or last
occu</summary>
      
    
    
    
    <category term="Reference" scheme="https://jifengwu2k.github.io/categories/Reference/"/>
    
    
  </entry>
  
  <entry>
    <title>C++ Coding Guidelines</title>
    <link href="https://jifengwu2k.github.io/2025/09/15/C-Coding-Guidelines/"/>
    <id>https://jifengwu2k.github.io/2025/09/15/C-Coding-Guidelines/</id>
    <published>2025-09-15T04:00:00.000Z</published>
    <updated>2025-09-15T15:54:29.815Z</updated>
    
    <content type="html"><![CDATA[<h2 id="guiding-philosophy">Guiding Philosophy</h2><ul><li>Prioritize modularity, clarity, and maintainability over prematureoptimization or legacy patterns.<ul><li>Code should be readable, easily understood, and safe bydefault.</li></ul></li><li>Favor Python-style expressiveness with modern C++ strengths:<ul><li>Use strong type systems, STL containers, concepts, range-based andhigher-order functions.</li><li>Avoid C-style loops, macros, and pointer tricks that hideintent.</li></ul></li><li>Make the compiler's job as easy as possible:<ul><li>Clear ownership, resource lifetime, and data flow allow compilers tooptimize code aggressively.</li><li>By avoiding hidden dependencies and using STL idioms, enable thecompiler to perform superior vectorization, inlining, and memory/layoutoptimizations.</li></ul></li><li>Design for trivial portability to GPU, FPGA, and other accelerators:<ul><li>Functional, range-based, and stateless/RAII idioms map directly tobulk-parallel and dataflow hardware.</li><li>State machines using <code>std::variant</code> or explicit types,instead of enums and scattered flags, make auto-parallelization andoffloading straightforward.</li><li>Consistent type size/platform rules yield code predictable forhigh-level synthesis and cross-ISA portability.</li><li>By steering clear of manual low-level hacks, code lifts cleanly tomodern frameworks like CUDA, SYCL, or high-level FPGA toolchains.</li></ul></li><li>C++ is treated as a platform-level language like Python. Theguidelines do not merely govern surface syntax and C++ standardfeatures, but unambiguously specify expectations for the <em>entireexecution environment</em>:<ul><li>ABI (Application Binary Interface)</li><li>OS and system libraries (e.g. POSIX semantics,thread/process/signaling behavior)</li><li>Consistency of type sizes, object layout, exception handling, RTTI,and dynamic loading</li><li>Deterministic handling and semantics for all STL andlanguage/library features</li></ul></li></ul><h2 id="lexical-filing-conventions">Lexical &amp; FilingConventions</h2><h3 id="indentation">Indentation</h3><ul><li>Always use 4 spaces per indentation level (Python style).</li><li>Tabs, 2-space or 8-space indents are forbidden.</li></ul><h3 id="functions-variables">Functions &amp; Variables</h3><ul><li>All function and variable names (including members):<code>snake_case</code>, all lowercase.<ul><li><code>int max_value;</code>, <code>double amount_sum;</code></li></ul></li><li>No CamelCase, PascalCase, or mixing.</li></ul><h3 id="typesclassesstructs">Types/Classes/Structs</h3><ul><li>Class, struct, and enum names: <code>CamelCase</code> (first letterof each word capitalized), <strong>no underscores.</strong><ul><li><code>class FileReader &#123; ... &#125;;</code>,<code>struct UserInfo &#123; ... &#125;;</code></li></ul></li></ul><h3 id="file-extensions">File Extensions</h3><ul><li><code>.c</code>: C-style source code.</li><li><code>.m</code>, <code>.mm</code>: Objective-C style source code.<ul><li>We explicitly allow and encourage the usage of POSIX-compliantObjective-C OUTSIDE the Cocoa framework, whenever Python-style "look upby name" is required.</li></ul></li><li><code>.cpp</code>: C++-style source code.</li><li><code>.h</code>: Only interface declarations, neverfunction/template bodies.</li><li><code>.hpp</code>: Can include full implementations, templates,inline functions.</li></ul><p>No other file extensions.</p><h3 id="include-guards">Include Guards</h3><ul><li>Every header (<code>.h</code>, <code>.hpp</code>) must use aninclude guard named as the file name in all caps, dots replaced withunderscores, with no added prefix or suffix, e.g.,<ul><li><code>foo_bar.h</code> - <code>#ifndef FOO_BAR_H</code></li><li><code>my_class.hpp</code> - <code>#ifndef MY_CLASS_HPP</code></li></ul></li></ul><h3 id="file-naming">File Naming</h3><ul><li>All source/header files: <code>snake_case</code>, all lowercase, useunderscores, e.g.:<ul><li><code>network_manager.h</code>, <code>data_loader.cpp</code></li></ul></li><li>No CamelCase, hyphens, or uppercase.</li></ul><h2 id="type-system-and-data-model">Type System and Data Model</h2><h3 id="type-size-assumptions">Type Size Assumptions</h3><table><thead><tr class="header"><th>Type</th><th>Bytes</th></tr></thead><tbody><tr class="odd"><td><code>char</code></td><td>1</td></tr><tr class="even"><td><code>short</code></td><td>2</td></tr><tr class="odd"><td><code>int</code></td><td>4</td></tr><tr class="even"><td><code>wchar_t</code></td><td>4</td></tr><tr class="odd"><td><code>float</code></td><td>4</td></tr><tr class="even"><td><code>long</code></td><td>8</td></tr><tr class="odd"><td><code>double</code></td><td>8</td></tr></tbody></table><ul><li>Any violation makes the platform "unsupported".</li></ul><h3 id="struct-vs-class-semantics">Struct vs Class Semantics</h3><ul><li>Struct: For plain data (POD).<ul><li>Structs NEVER own resources, nor clean up.</li><li>Always default-initializable to valid state.</li><li>No custom Big Five (destructor, copy constructor, etc.)</li><li>Never allocate struct on the heap (no <code>new StructType</code>).They must live on stack or inside containers/smart pointers.</li><li>Do not store pointers/references to struct instance for long-termuse.</li></ul></li><li>Class: For resource management.<ul><li>Must define explicit constructor(s) and Big Five.</li><li>No raw pointers escape outside internal implementation; prefer smartpointers/containers.</li></ul></li></ul><h3 id="function-parameters">Function Parameters</h3><ul><li>If struct/class is 16 bytes: always pass by reference(<code>const T&amp;</code>/<code>T&amp;</code>/<code>T&amp;&amp;</code>and <code>std::move</code>).</li><li>Value passing only for simple types and small STL types.</li></ul><h3 id="strings-unicode">Strings &amp; Unicode</h3><ul><li><code>std::string</code>: Always UTF-8 encoded.</li><li><code>std::wstring</code> (POSIX): Each <code>wchar_t</code> holds adecoded unicode codepoint; use for character-based logic.<ul><li>Serialize or send as UTF-8 (<code>std::wstring</code> -&gt;<code>std::string</code>) for output/network.</li></ul></li></ul><h3 id="subtyping">Subtyping</h3><ul><li>Use C++20 concepts and duck typing with templates, NOT classinheritance, whenever possible.<ul><li>Prioritize using the standard library's concepts, and use themaccording to Python conventions.<ul><li>See Appendix for details.</li></ul></li></ul></li></ul><h3 id="functors">Functors</h3><ul><li>Always use functors (including lambdas) forgeneralization/high-order logic.</li><li>C-style function pointers are only allowed for low-levelABI/C-interfacing.</li></ul><h3 id="container-data-structure-policy">Container &amp; Data StructurePolicy</h3><ul><li>Always prefer STL: <code>vector</code>, <code>map</code>,<code>set</code>, <code>optional</code>, <code>variant</code>, etc.</li><li>Only use third-party containers (boost, absl, folly) with fulldocumentation and technical review.</li><li>Never hand-write data structures for "preemptive optimization".</li></ul><h2 id="operational-semantics">Operational Semantics</h2><h3 id="control-flow">Control Flow</h3><ul><li>Strongly discourage the use of counting-based for-loops. Hard toread, hard to optimize.</li><li>Only allow <code>goto</code> for control flow in plain-POD non-ownercode, never with objects needing destruction.</li><li>Use modern functional idioms (map/reduce/filter/apply_if) wheneverpossible.</li><li>Use explicit patterns like State Machine whenever possible.<ul><li>Important program states must use concrete types and variants, neverenums+switches+separate local variables, e.g.,<ul><li><code>struct IdleState &#123; /* ... */ &#125;;</code></li><li><code>struct RunningState &#123; /* ... */ &#125;;</code></li><li><code>using State = std::variant&lt;IdleState, RunningState&gt;;</code></li></ul></li></ul></li><li>Use C++20 coroutines for complex control flow.<ul><li>Follow Python generator conventions (<code>co_yield</code> =<code>yield</code>, "delegating" = <code>yield from</code>).</li><li>Document coroutines in Pythonic style for zero cognitive gap.</li></ul></li></ul><h3 id="exceptions-error-handling">Exceptions &amp; Error Handling</h3><h4 id="exception-policy">Exception Policy</h4><ul><li>Use exceptions as standard; do not rewrite everything to error codesor forbid exceptions.</li><li>Only exclude exceptions in hard-constrained "special" cases (must befully justified &amp; documented).</li></ul><h4 id="fail-fast-fail-loudly">Fail Fast, Fail Loudly</h4><ul><li>On detection of error/inconsistency, immediately abort/throw/assertwith full context.<ul><li>Never clip, silence, or tolerate errors unless in controlled,reviewed, and documented edge cases.</li></ul></li></ul><h2 id="platform-build-system">Platform &amp; Build System</h2><h3 id="platform-abi">Platform, ABI</h3><ul><li>Only POSIX-conformant platforms with full POSIX C API for file/IO,threads, sockets, signals, etc. are supported.</li><li>Only Itanium C++ ABI is supported.</li></ul><h3 id="build-toolchain">Build Toolchain</h3><ul><li>All build/link flows use GCC-style CLI tools, preferably LLVM/Clang.<ul><li>Assume availability of all GCC extensions.</li></ul></li><li>Always specify all needed options/libraries, e.g.:<ul><li><code>-pthread</code> (threads)</li><li><code>-lc++</code> (clang libc++)</li><li><code>-ldl</code> (dlopen)</li></ul></li></ul><h3 id="intermediate-representation">Intermediate Representation</h3><ul><li>Always use LLVM IR (<code>.ll</code>, <code>.bc</code>) as theintermediate layer for cross-platform, analysis, optimization.</li><li>Never use native assembly.</li></ul><h2 id="appendix-c-concepts-vs-python-typing-constructs">Appendix: C++Concepts vs Python Typing Constructs</h2><h3 id="equality-ordering">Equality, Ordering</h3><table><thead><tr class="header"><th>C++ Concept</th><th>Example</th><th>Meaning</th><th>Python Typing Equivalent</th></tr></thead><tbody><tr class="odd"><td><code>std::equality_comparable&lt;T&gt;</code></td><td><code>equality_comparable&lt;MyType&gt;</code></td><td>Can test equality (<code>==</code>, <code>!=</code>)</td><td><code>typing.SupportsRichComparison</code></td></tr><tr class="even"><td><code>std::totally_ordered&lt;T&gt;</code></td><td><code>totally_ordered&lt;MyType&gt;</code></td><td>All <code>&lt;, &lt;=, &gt;, &gt;=</code> comparisons</td><td><code>typing.SupportsRichComparison</code></td></tr></tbody></table><h3 id="numeric-and-mathematical-types">Numeric and MathematicalTypes</h3><table style="width:100%;"><thead><tr class="header"><th>C++ Concept</th><th>Example</th><th>Meaning</th><th>Python Typing Equivalent</th></tr></thead><tbody><tr class="odd"><td><code>std::integral&lt;T&gt;</code></td><td><code>integral&lt;int&gt;</code></td><td>Is an integral (integer) type</td><td><code>numbers.Integer</code></td></tr><tr class="even"><td><code>std::signed_integral&lt;T&gt;</code></td><td><code>signed_integral&lt;int&gt;</code></td><td>Is a signed integer type</td><td></td></tr><tr class="odd"><td><code>std::unsigned_integral&lt;T&gt;</code></td><td><code>unsigned_integral&lt;uint32_t&gt;</code></td><td>Is an unsigned integer type</td><td></td></tr><tr class="even"><td><code>std::floating_point&lt;T&gt;</code></td><td><code>floating_point&lt;double&gt;</code></td><td>Is a floating point type</td><td><code>numbers.Real</code></td></tr></tbody></table><h3 id="containers">Containers</h3><table><thead><tr class="header"><th>C++ Concept</th><th>Example</th><th>Meaning</th><th>Python Typing Equivalent</th></tr></thead><tbody><tr class="odd"><td><code>std::ranges::range&lt;T&gt;</code></td><td><code>range&lt;std::vector&lt;int&gt;&gt;</code></td><td>Iterable range concept</td><td><code>typing.Iterable[T]</code></td></tr><tr class="even"><td><code>std::ranges::input_range&lt;T&gt;</code></td><td><code>input_range&lt;std::istream&gt;</code></td><td>Readable, single pass</td><td><code>typing.Iterator[T]</code></td></tr><tr class="odd"><td><code>std::ranges::sized_range&lt;T&gt;</code></td><td><code>sized_range&lt;std::array&lt;int, 3&gt;&gt;</code></td><td>Has a known size (<code>.size()</code>)</td><td><code>typing.Sized</code></td></tr><tr class="even"><td><code>std::ranges::output_range&lt;T, V&gt;</code></td><td></td><td>Writable range (output iterators)</td><td><code>typing.MutableSequence[T]</code></td></tr><tr class="odd"><td><code>std::ranges::view&lt;T&gt;</code></td><td></td><td>Lightweight, non-owning range</td><td></td></tr><tr class="even"><td><code>std::input_iterator&lt;T&gt;</code></td><td><code>input_iterator&lt;Iter&gt;</code></td><td>Supports <code>++</code>, deref, read</td><td><code>typing.Iterator[T]</code></td></tr><tr class="odd"><td><code>std::forward_iterator&lt;T&gt;</code></td><td><code>forward_iterator&lt;Iter&gt;</code></td><td>Multi-pass input iterator</td><td><code>typing.Iterator[T]</code></td></tr><tr class="even"><td><code>std::bidirectional_iterator&lt;T&gt;</code></td><td><code>bidirectional_iterator&lt;Iter&gt;</code></td><td>Forward/backward iteration</td><td><code>typing.Sequence[T]</code></td></tr><tr class="odd"><td><code>std::random_access_iterator&lt;T&gt;</code></td><td><code>random_access_iterator&lt;Iter&gt;</code></td><td>Supports <code>it[n]</code> indexing, etc.</td><td><code>typing.Sequence[T]</code></td></tr><tr class="even"><td><code>std::contiguous_iterator&lt;T&gt;</code></td><td><code>contiguous_iterator&lt;Iter&gt;</code></td><td>Underlying data is contiguous in memory</td><td><code>typing.Sequence[T]</code></td></tr></tbody></table><h3 id="callables">Callables</h3><table><thead><tr class="header"><th>C++ Concept</th><th>Example</th><th>Meaning</th><th>Python Typing Equivalent</th></tr></thead><tbody><tr class="odd"><td><code>std::invocable&lt;F, Args...&gt;</code></td><td><code>invocable&lt;Fn, int&gt;</code></td><td>Callable object (function, lambda, etc.)</td><td><code>typing.Callable[..., T]</code></td></tr><tr class="even"><td><code>std::predicate&lt;F, Args...&gt;</code></td><td><code>predicate&lt;Fn, int&gt;</code></td><td>Callable returns <code>bool</code></td><td><code>typing.Callable[..., bool]</code></td></tr></tbody></table><h3 id="type-identity-and-conversion">Type Identity and Conversion</h3><table><thead><tr class="header"><th>C++ Concept</th><th>Example (C++)</th><th>Meaning</th><th>Python <code>typing</code> Equivalent</th></tr></thead><tbody><tr class="odd"><td><code>std::same_as&lt;T, U&gt;</code></td><td><code>same_as&lt;int, int&gt;</code></td><td>Types are exactly the same</td><td></td></tr><tr class="even"><td><code>std::convertible_to&lt;From, To&gt;</code></td><td><code>convertible_to&lt;int, float&gt;</code></td><td>Can be converted (<code>static_cast&lt;To&gt;(from)</code>)</td><td></td></tr><tr class="odd"><td><code>std::derived_from&lt;D, B&gt;</code></td><td><code>derived_from&lt;class A, class Base&gt;</code></td><td>D inherits from B</td><td></td></tr><tr class="even"><td><code>std::constructible_from&lt;T, Args...&gt;</code></td><td><code>constructible_from&lt;std::string, const char*&gt;</code></td><td>Constructible from given args</td><td><code>typing.Callable</code> for constructors</td></tr><tr class="odd"><td><code>std::default_initializable&lt;T&gt;</code></td><td></td><td>Default (no-arg) constructable</td><td></td></tr></tbody></table><h3 id="copying-moving-assignment-swap">Copying, Moving, Assignment&amp; Swap</h3><table><thead><tr class="header"><th>C++ Concept</th><th>Example</th><th>Meaning</th><th>Python Typing Equivalent</th></tr></thead><tbody><tr class="odd"><td><code>std::move_constructible&lt;T&gt;</code></td><td><code>move_constructible&lt;MyType&gt;</code></td><td>Supports move semantics</td><td></td></tr><tr class="even"><td><code>std::copy_constructible&lt;T&gt;</code></td><td><code>copy_constructible&lt;MyType&gt;</code></td><td>Can be copy-constructed</td><td></td></tr><tr class="odd"><td><code>std::assignable_from&lt;T, U&gt;</code></td><td><code>assignable_from&lt;MyType&amp;, int&gt;</code></td><td>lhs can be assigned rhs</td><td></td></tr><tr class="even"><td><code>std::swappable&lt;T&gt;</code></td><td><code>swappable&lt;MyType&gt;</code></td><td>Can exchange values (swap)</td><td></td></tr><tr class="odd"><td><code>std::swappable_with&lt;T, U&gt;</code></td><td><code>swappable_with&lt;A, B&gt;</code></td><td>Can swap values with another type</td><td></td></tr></tbody></table>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;guiding-philosophy&quot;&gt;Guiding Philosophy&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Prioritize modularity, clarity, and maintainability over premature
optimization</summary>
      
    
    
    
    <category term="Reference" scheme="https://jifengwu2k.github.io/categories/Reference/"/>
    
    
  </entry>
  
  <entry>
    <title>古诗词现代解读</title>
    <link href="https://jifengwu2k.github.io/2025/09/12/%E5%8F%A4%E8%AF%97%E8%AF%8D%E7%8E%B0%E4%BB%A3%E8%A7%A3%E8%AF%BB/"/>
    <id>https://jifengwu2k.github.io/2025/09/12/%E5%8F%A4%E8%AF%97%E8%AF%8D%E7%8E%B0%E4%BB%A3%E8%A7%A3%E8%AF%BB/</id>
    <published>2025-09-12T04:00:00.000Z</published>
    <updated>2025-10-04T16:41:55.972Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>朝搴阰之木兰兮，夕揽洲之宿莽。</p><p>乘骐骥以驰骋兮，来吾道夫先路！</p><p>朝饮木兰之坠露兮，夕餐秋菊之落英。</p><p>回朕车以复路兮，及行迷之未远。</p><p>步余马于兰皋兮，驰椒丘且焉止息。</p><p>忽反顾以游目兮，将往观乎四荒。</p><p>驷玉虬以桀鹥兮，溘埃风余上征。</p><p>朝发轫于苍梧兮，夕余至乎县圃。</p><p>览相观于四极兮，周流乎天余乃下。</p><p>朝发轫于天津兮，夕余至乎西极。</p><p>凤皇翼其承旗兮，高翱翔之翼翼。</p><p>驾八龙之婉婉兮，载云旗之委蛇。</p><p>抑志而弭节兮，神高驰之邈邈。</p><p>陟升皇之赫戏兮，忽临睨夫旧乡。</p><p>——屈原</p></blockquote><p>现代解读：</p><ul><li>沿江河步行，</li><li>驾车翻越山岗，</li><li>然后飞上三万五千英尺的高空，</li><li>俯瞰荆楚大地郁郁葱葱的照叶树林。</li></ul><hr /><blockquote><p>穷发之北，有冥海者，天池也……背若泰山，翼若垂天之云，抟扶摇羊角而上者九万里，绝云气，负青天，然后图南，且适南冥也。</p><p>天之苍苍，其正色邪？其远而无所至极邪？其视下也，亦若是则已矣。且夫水之积也不厚，则其负大舟也无力……风之积也不厚，则其负大翼也无力。故九万里，则风斯在下矣……</p><p>——庄子</p></blockquote><blockquote><p>北海虽赊，扶摇可接。东隅已逝，桑榆非晚。</p><p>——王勃</p></blockquote><hr /><p>现代解读：</p><ul><li>从中原到贝加尔湖乃至更远的北极地区，是跨越数千公里的超远距离。</li><li>“扶摇”是想象中的、威力无穷的自然之力，而科技将古典文学中最瑰丽的想象变成了现实。</li><li>在百万英尺的高空，空气稀薄，阻力极小，飞机可以高效地进行高超音速巡航，实现极速远距离飞行。</li><li>在这个高度，飞行员所见正是永恒的夜色，脚下是云层或微茫的大地，星辰仿佛触手可及。</li></ul><hr /><blockquote><p>Deniz üstü köpürür ... Benim de şu cihana gelişim ... Deniz üstüyelkenden ... Denizin ortasında ... Benim de bu cihandan gidişim</p><p>Kayığa da binsem götürür ... Bir güzelden ötürü ... Ecel geldierkenden ... Mum yanar sofrasında ... Memleket sevdasından</p><p>Hey canım, hey ... Hey canım, hey ... Hey canım, hey ... Hey canım,hey ... Hey canım, hey</p><ul><li>Cem Karaca</li></ul></blockquote><p>现代解读：</p><p>运用比兴及复沓的手法，一唱三叹，表达其“道不行，乘桴浮于海”，政治上落魄失意。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;朝搴阰之木兰兮，夕揽洲之宿莽。&lt;/p&gt;
&lt;p&gt;乘骐骥以驰骋兮，来吾道夫先路！&lt;/p&gt;
&lt;p&gt;朝饮木兰之坠露兮，夕餐秋菊之落英。&lt;/p&gt;
&lt;p&gt;回朕车以复路兮，及行迷之未远。&lt;/p&gt;
&lt;p&gt;步余马于兰皋兮，驰椒丘且焉止息。&lt;/p&gt;
&lt;p&gt;忽反顾以游目</summary>
      
    
    
    
    <category term="Linguistics and Literature" scheme="https://jifengwu2k.github.io/categories/Linguistics-and-Literature/"/>
    
    
  </entry>
  
  <entry>
    <title>Running Local LLMs with Ollama</title>
    <link href="https://jifengwu2k.github.io/2025/09/05/Running-Local-LLMs-with-Ollama/"/>
    <id>https://jifengwu2k.github.io/2025/09/05/Running-Local-LLMs-with-Ollama/</id>
    <published>2025-09-05T04:00:00.000Z</published>
    <updated>2025-10-04T16:38:50.984Z</updated>
    
    <content type="html"><![CDATA[<p>Large Language Models (LLMs) have revolutionized AI, but cloud-basedsolutions often come with privacy concerns and usage limitations. Ollamaprovides an elegant solution by enabling you to run LLMs locally on yourmachine. This guide will walk you through the entire process frominstallation to interaction.</p><h2 id="what-is-ollama">What is Ollama?</h2><p>Ollama is a lightweight, extensible framework that allows you to runvarious open-source LLMs on your local hardware. It handles modelweights, configurations, and provides a simple API interface similar toOpenAI's.</p><h2 id="installation-process">Installation Process</h2><h3 id="download-ollama">Download Ollama</h3><p>Open your terminal and execute the following command to download thelatest version of Ollama:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">wget https://ollama.com/download/ollama-linux-amd64.tgz<br></code></pre></td></tr></table></figure><h3 id="install-ollama">Install Ollama</h3><p>Extract the downloaded archive to your system directory:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo tar -C /usr -xzvf ollama-linux-amd64.tgz<br></code></pre></td></tr></table></figure><h2 id="starting-the-ollama-service">Starting the Ollama Service</h2><p>Launch the Ollama service with this simple command:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ollama serve<br></code></pre></td></tr></table></figure><p>Keep this terminal session active to maintain the service.</p><h2 id="verifying-your-installation">Verifying Your Installation</h2><p>Open a new terminal window and verify that Ollama is properlyinstalled and running:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ollama -v<br></code></pre></td></tr></table></figure><p>This command will display the installed version of Ollama, confirmingsuccessful installation.</p><h2 id="finding-the-right-model">Finding the Right Model</h2><p>Ollama supports numerous models with different capabilities andsizes. Browse the <a href="https://ollama.com/search">Ollama ModelLibrary</a> to explore available options.</p><h3 id="downloading-a-model">Downloading a Model</h3><p>For this example, we'll download the gemma3:4b model:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ollama pull gemma3:4b<br></code></pre></td></tr></table></figure><p>The download process may take considerable time depending on yourInternet connection speed and the model size.</p><h3 id="terminal-based-conversation">Terminal-Based Conversation</h3><p>Once your model is downloaded, you can start interacting with itdirectly through the terminal:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ollama run gemma3:4b<br></code></pre></td></tr></table></figure><p>This command launches an interactive chat session with your model.Press <code>Ctrl-D</code> to exit the conversation when finished.</p><h2 id="programmatic-access-via-python-api">Programmatic Access viaPython API</h2><p>Ollama provides an OpenAI-compatible API, making it easy to integratewith existing applications and scripts.</p><p>Install a client library:</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmake">pip <span class="hljs-keyword">install</span> chat-completions-conversation<br></code></pre></td></tr></table></figure><p>Use the client library:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> chat_completions_conversation <span class="hljs-keyword">import</span> ChatCompletionsConversation<br><br>conversation = ChatCompletionsConversation(<br>    api_key=<span class="hljs-string">&#x27;&#x27;</span>,<br>    base_url=<span class="hljs-string">&#x27;http://localhost:11434/v1&#x27;</span>,<br>    model=<span class="hljs-string">&#x27;gemma3:4b&#x27;</span><br>)<br><br>conversation.send_and_receive_response(<span class="hljs-string">&#x27;Hello, how are you?&#x27;</span>)<br><span class="hljs-comment"># Model returns a string</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Large Language Models (LLMs) have revolutionized AI, but cloud-based
solutions often come with privacy concerns and usage limitations. Ol</summary>
      
    
    
    
    <category term="Data Science, Multimedia, and Process Automation" scheme="https://jifengwu2k.github.io/categories/Data-Science-Multimedia-and-Process-Automation/"/>
    
    
  </entry>
  
  <entry>
    <title>穿搭技巧</title>
    <link href="https://jifengwu2k.github.io/2025/09/03/%E7%A9%BF%E6%90%AD%E6%8A%80%E5%B7%A7/"/>
    <id>https://jifengwu2k.github.io/2025/09/03/%E7%A9%BF%E6%90%AD%E6%8A%80%E5%B7%A7/</id>
    <published>2025-09-03T04:00:00.000Z</published>
    <updated>2025-10-04T16:44:33.680Z</updated>
    
    <content type="html"><![CDATA[<ul><li><a href="/static/videos/怎么穿“显高”！.mp4">怎么穿“显高”！</a></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;/static/videos/怎么穿“显高”！.mp4&quot;&gt;怎么穿“显高”！&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</summary>
      
    
    
    
    <category term="Lifestyle" scheme="https://jifengwu2k.github.io/categories/Lifestyle/"/>
    
    
  </entry>
  
  <entry>
    <title>PyPI Packages</title>
    <link href="https://jifengwu2k.github.io/2025/08/31/PyPI-Packages/"/>
    <id>https://jifengwu2k.github.io/2025/08/31/PyPI-Packages/</id>
    <published>2025-08-31T04:00:00.000Z</published>
    <updated>2025-09-28T20:59:45.789Z</updated>
    
    <content type="html"><![CDATA[<pre><code class=" mermaid">graph LR    posix_or_nt --&gt; textcompat    textcompat --&gt; chat_completions_conversation    intersperse --&gt; chat_completions_conversation    canonical_interval --&gt; canonical_range    canonical_range --&gt; determine_slice_assignment_action    canonical_interval --&gt; determine_slice_assignment_action        fixed_width_int --&gt; tuplehash    canonical_range --&gt; cowlist    determine_slice_assignment_action --&gt; cowlist    tuplehash --&gt; cowlist        cowlist --&gt; tree_traversals    rawattr --&gt; less_than_key    cowlist --&gt; prefix_free_sorted_cowlist_set    put_back_iterator --&gt; prefix_free_sorted_cowlist_set    canonical_range --&gt; sorted_fractionally_indexed_cowlist_set    cowlist --&gt; sorted_fractionally_indexed_cowlist_set    generalized_range --&gt; sorted_fractionally_indexed_cowlist_set    posix_or_nt --&gt; read_unicode_environment_variables_dictionary    posix_or_nt --&gt; get_unicode_shell    read_unicode_environment_variables_dictionary --&gt; get_unicode_shell    posix_or_nt --&gt; get_unicode_home    read_unicode_environment_variables_dictionary --&gt; get_unicode_home    posix_or_nt --&gt; find_unicode_executable    read_unicode_environment_variables_dictionary --&gt; find_unicode_executable    find_unicode_executable --&gt; get_unicode_arguments_to_launch_editor    posix_or_nt --&gt; get_unicode_arguments_to_launch_editor    read_unicode_environment_variables_dictionary --&gt; get_unicode_arguments_to_launch_editor    split_command_line --&gt; get_unicode_arguments_to_launch_editor    file_to_unicode_base64_data_uri    send_recv_json    cowlist --&gt; escape_nt_command_line_argument    hwc_chw_ndarray_conversion    escape_nt_command_line_argument --&gt; ctypes_unicode_proclaunch    find_unicode_executable --&gt; ctypes_unicode_proclaunch    posix_or_nt --&gt; ctypes_unicode_proclaunch    read_unicode_environment_variables_dictionary --&gt; ctypes_unicode_proclaunch    send_recv_json --&gt; ctypes_unicode_proclaunch    ctypes_unicode_proclaunch --&gt; get_unicode_multiline_input_with_editor    get_unicode_arguments_to_launch_editor --&gt; get_unicode_multiline_input_with_editor</code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;pre&gt;&lt;code class=&quot; mermaid&quot;&gt;graph LR
    posix_or_nt --&amp;gt; textcompat

    textcompat --&amp;gt; chat_completions_conversation
    intersperse </summary>
      
    
    
    
    <category term="Reference" scheme="https://jifengwu2k.github.io/categories/Reference/"/>
    
    
  </entry>
  
  <entry>
    <title>座右铭</title>
    <link href="https://jifengwu2k.github.io/2025/08/31/%E5%BA%A7%E5%8F%B3%E9%93%AD/"/>
    <id>https://jifengwu2k.github.io/2025/08/31/%E5%BA%A7%E5%8F%B3%E9%93%AD/</id>
    <published>2025-08-31T04:00:00.000Z</published>
    <updated>2025-10-04T16:41:43.993Z</updated>
    
    <content type="html"><![CDATA[<h2 id="freedom-perception">Freedom &amp; Perception</h2><blockquote><p>The best slave is the one who thinks he is free.</p></blockquote><blockquote><p>Every accusation is a confession.</p></blockquote><h2 id="change-action">Change &amp; Action</h2><blockquote><p>Philosophers have only interpreted the world, in various ways; thepoint, however, is to change it.</p></blockquote><h2 id="vision-strategy">Vision &amp; Strategy</h2><blockquote><p>左牵黄，右擎苍，锦帽貂裘，千骑卷平冈。</p></blockquote><blockquote><p>不谋万世者，不足谋一时；不谋全局者，不足谋一域。</p></blockquote><blockquote><p>It is hallowed by no traditions; it is hampered by none. Its fingerposts all point forward.</p></blockquote><blockquote><p>剧是必须从序幕开始的，但序幕还不是高潮。</p></blockquote><blockquote><p>一张白纸，没有负担，好写最新最美的文字，好画最新最美的画图。</p></blockquote><blockquote><p>……结合各自具体实际开拓创新，特别是在前沿实践、未知领域，鼓励大胆探索、敢为人先，寻求有效解决新矛盾新问题的思路和办法，努力创造可复制、可推广的新鲜经验。</p></blockquote><h2 id="practical-wisdom-problem-solving">Practical Wisdom &amp; ProblemSolving</h2><blockquote><p>Smart data structures and dumb code works a lot better than the otherway around.</p></blockquote><blockquote><p>Premature optimization is the root of all evil.</p></blockquote><blockquote><p>The biggest lesson that can be read from 70 years of AI research isthat general methods that leverage computation are ultimately the mosteffective, and by a large margin.</p><p>Building in how we think we think does not work in the long run.</p><p>The only thing that matters in the long run is the leveraging ofcomputation.</p><p>AI researchers have often tried to build knowledge into their agents,this always helps in the short term, and is personally satisfying to theresearcher, but in the long run it plateaus and even inhibits furtherprogress, and breakthrough progress eventually arrives by an opposingapproach based on scaling computation by search and learning.</p><p>The eventual success is tinged with bitterness, and oftenincompletely digested, because it is success over a favored,human-centric approach.</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;freedom-perception&quot;&gt;Freedom &amp;amp; Perception&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;The best slave is the one who thinks he is free.&lt;/p&gt;
&lt;/blockquote&gt;</summary>
      
    
    
    
    <category term="Linguistics and Literature" scheme="https://jifengwu2k.github.io/categories/Linguistics-and-Literature/"/>
    
    
  </entry>
  
  <entry>
    <title>Python Coding Guidelines</title>
    <link href="https://jifengwu2k.github.io/2025/08/29/Python-Coding-Guidelines/"/>
    <id>https://jifengwu2k.github.io/2025/08/29/Python-Coding-Guidelines/</id>
    <published>2025-08-29T04:00:00.000Z</published>
    <updated>2025-09-28T19:12:25.327Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>Philosophy:</p><p>We have exceptionally strict coding standards.</p><p>But we explicitly use them in tandem with LLMs.</p><p>No brittle linters. The LLM <em>is</em> the living compliancechecker, code reviewer, and first-pass automator.</p><p>We achieve uncompromising quality control, reliability, andportability - <em>while moving faster than ever before</em>.</p></blockquote><h1 id="guidelines">Guidelines</h1><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br></pre></td><td class="code"><pre><code class="hljs md"><span class="hljs-section">## General Principles</span><br><br><span class="hljs-bullet">-</span> <span class="hljs-strong">**One file = one module = one purpose**</span>: Each file must be explicitly importable as a module and serve exactly one main purpose.<br><span class="hljs-bullet">-</span> <span class="hljs-strong">**Portability to C++**</span>: Code must be directly portable to C++ (avoid dynamic, Python-specific idioms).<br><br><span class="hljs-section">## Compatibility</span><br><br><span class="hljs-bullet">-</span> <span class="hljs-strong">**Python 2 &amp; 3**</span>: All code must run and be tested under both Python 2 and 3.<br><span class="hljs-bullet">-</span> <span class="hljs-strong">**POSIX &amp; NT**</span>: All code must work on both UNIX-like and Windows systems.<br><br><span class="hljs-section">## File and Folder Structure</span><br><br><span class="hljs-bullet">-</span> Import all files (modules) via absolute import. No relative import, no <span class="hljs-code">`sys.path`</span> manipulation.<br><span class="hljs-bullet">-</span> All files (modules) must only have public functions and classes - no private/internal APIs.<br><span class="hljs-bullet">-</span> All directories must include an explicit <span class="hljs-code">`__init__.py`</span> within them.<br><br><span class="hljs-section">### Utility Code: No &quot;utils.py&quot; - Publish Generalized Tools</span><br><br><span class="hljs-bullet">-</span> No local &quot;utils.py&quot; files: Do not keep grab-bag or miscellaneous utility functions/classes in a project-private <span class="hljs-code">`utils.py`</span> file.<br><span class="hljs-bullet">-</span> <span class="hljs-strong">**General-purpose tools must be published as standalone packages to PyPI**</span>, each focusing on one well-defined function, class, or concept.<br><span class="hljs-bullet">    -</span> Move helpers that would otherwise go into &quot;utils.py&quot; into their own properly documented, versioned packages.<br><span class="hljs-bullet">    -</span> These utility packages should be:<br><span class="hljs-bullet">        -</span> Named after their actual purpose;<br><span class="hljs-bullet">        -</span> Well-tested and actively maintained;<br><span class="hljs-bullet">        -</span> Equipped with a README, proper docstrings, testable usage examples, semantic versioning, and a clear license.<br><span class="hljs-bullet">-</span> All projects share utilities via explicit dependencies rather than duplicating or copying helpers.<br><span class="hljs-bullet">    -</span> When a utility is improved or a bug is fixed, updating the package ensures all dependent projects benefit automatically - &quot;write once, run everywhere.&quot;<br><span class="hljs-bullet">    -</span> This approach avoids hidden technical debt and promotes code quality, documentation, reuse, and maintainability across your entire codebase.<br><span class="hljs-bullet">    -</span> It also contributes to the wider Python ecosystem.<br><br><span class="hljs-section">## Testing &amp; Documentation</span><br><br><span class="hljs-bullet">-</span> Tests must:<br><span class="hljs-bullet">    -</span> Run successfully on both Python 2 and 3, POSIX and NT.<br><span class="hljs-bullet">    -</span> Be suitable for inclusion in <span class="hljs-code">`README.md`</span> under &quot;Usage&quot; or &quot;Quickstart&quot;.<br><span class="hljs-bullet">        -</span> Simultaneously serve as usage documentation (idiomatic examples).<br><span class="hljs-bullet">        -</span> Self-contained and runnable as a script or documentation block.<br><br><span class="hljs-section">## Syntax &amp; Language Features</span><br><br><span class="hljs-section">### Division/Print</span><br><br><span class="hljs-bullet">-</span> Use <span class="hljs-code">`from __future__ import division, print_function`</span> if using <span class="hljs-code">`/`</span> or <span class="hljs-code">`print()`</span><br><br><span class="hljs-section">### String Types</span><br><br><span class="hljs-bullet">-</span> <span class="hljs-strong">**Always be explicit:**</span><br><span class="hljs-bullet">    -</span> <span class="hljs-code">`b&#x27;&#x27;`</span> = byte string<br><span class="hljs-bullet">    -</span> <span class="hljs-code">`u&#x27;&#x27;`</span> = Unicode string (as <span class="hljs-code">`typing.Text`</span>)<br><span class="hljs-bullet">    -</span> Plain <span class="hljs-code">`str`</span> only for ambiguous APIs (filesystem operations, <span class="hljs-code">`argparse`</span>).<br><br><span class="hljs-section">### String Formatting</span><br><br><span class="hljs-bullet">-</span> Only use the legacy <span class="hljs-code">`%`</span> formatting syntax. No <span class="hljs-code">`.format()`</span> or f-strings.<br><br><span class="hljs-section">### Typing</span><br><br><span class="hljs-bullet">-</span> All APIs fully typed with type <span class="hljs-strong">**comments only**</span> (<span class="hljs-code">`# type: ...`</span>)<br><span class="hljs-bullet">    -</span> No inline type annotations, no <span class="hljs-code">`AnnAssign`</span>.<br><span class="hljs-bullet">-</span> Use only typing features as in Python 3.5 / PEP 484.<br><span class="hljs-bullet">-</span> Absolutely no dependent typing. The return type of a function must not vary with different parameter types and/or values.<br><span class="hljs-bullet">-</span> No use of <span class="hljs-code">`@overload`</span> permitted.<br><br><span class="hljs-section">### Classes</span><br><br><span class="hljs-bullet">-</span> No <span class="hljs-code">`attrs`</span>, <span class="hljs-code">`dataclasses`</span>, or <span class="hljs-code">`namedtuple`</span>.<br><span class="hljs-bullet">-</span> All classes must have:<br><span class="hljs-bullet">    -</span> Declared <span class="hljs-code">`__slots__`</span><br><span class="hljs-bullet">    -</span> Explicit <span class="hljs-code">`object`</span> base class <br><span class="hljs-bullet">    -</span> Use <span class="hljs-code">`six.with_metaclass(meta, *bases)`</span> for metaclasses<br><span class="hljs-bullet">    -</span> Mutable: <span class="hljs-code">`__init__`</span>; Immutable: `<span class="hljs-strong">__new__</span><br><br><span class="hljs-section">### Enums</span><br><br><span class="hljs-bullet">-</span> Only manual/explicit values; do not use <span class="hljs-code">`auto()`</span> even with <span class="hljs-code">`enum34`</span>.<br><br><span class="hljs-section">### Version Checks &amp; Imports</span><br><br><span class="hljs-bullet">-</span> Use only <span class="hljs-code">`sys.version_info`</span> for version-conditional code.<br><span class="hljs-bullet">-</span> No <span class="hljs-code">`except ImportError`</span> or <span class="hljs-code">`sys.version`</span> checks.<br><br><span class="hljs-section">### Restricted Language Features</span><br><br><span class="hljs-bullet">-</span> Never use: <span class="hljs-code">`async`</span>, <span class="hljs-code">`await`</span>, <span class="hljs-code">`yield from`</span>, walrus (<span class="hljs-code">`:=`</span>), structural pattern matching (<span class="hljs-code">`match/case`</span>).<br><br><span class="hljs-section">## Input &amp; Argument Parsing</span><br><br><span class="hljs-section">### Input Handling</span><br><br><span class="hljs-bullet">-</span> For interactive input, always <span class="hljs-code">`import readline`</span>.<br><span class="hljs-bullet">-</span> Use <span class="hljs-code">`open(...)`</span> for binary files; <span class="hljs-code">`codecs.open(...)`</span> for Unicode text files.<br><br><span class="hljs-section">### Regular Expressions</span><br><br><span class="hljs-bullet">-</span> Regular expressions <span class="hljs-strong">**only for simple parsing**</span>.<br><span class="hljs-bullet">-</span> Use <span class="hljs-strong">**Unix-style/basic**</span> regex features:<br><span class="hljs-bullet">    -</span> <span class="hljs-code">`.`</span>: any single character<br><span class="hljs-bullet">    -</span> <span class="hljs-code">`[ ]`</span>: character set/class<br><span class="hljs-bullet">    -</span> <span class="hljs-code">`[^ ]`</span>: negated class<br><span class="hljs-bullet">    -</span> <span class="hljs-code">`^, $`</span>: line start/end<br><span class="hljs-bullet">    -</span> <span class="hljs-code">`( )`</span>: grouping/subexpression<br><span class="hljs-bullet">    -</span> <span class="hljs-code">`*`</span>: zero or more<br><span class="hljs-bullet">-</span> For <span class="hljs-strong">**complicated input**</span>:  <br>  Use a context-free grammar parser (e.g. [<span class="hljs-string">Lark</span>](<span class="hljs-link">https://github.com/lark-parser/lark</span>)), hand-written parser, or an LLM.<br><br><span class="hljs-section">### Argument Parsing</span><br><br><span class="hljs-bullet">-</span> Use <span class="hljs-code">`argparse`</span>.<br><span class="hljs-bullet">-</span> Use ambiguous <span class="hljs-code">`str`</span> for all argument values (default API behavior).<br><span class="hljs-bullet">-</span> All arguments should have a <span class="hljs-code">`help=...`</span> string.<br><br><span class="hljs-section">#### Flag Arguments</span><br><br><span class="hljs-bullet">-</span> <span class="hljs-strong">**Presence only:**</span> <span class="hljs-code">`action=&#x27;store_true&#x27;`</span> -&gt; <span class="hljs-code">`bool`</span><br><span class="hljs-bullet">-</span> <span class="hljs-strong">**Counted:**</span> <span class="hljs-code">`action=&#x27;count&#x27;`</span> -&gt; <span class="hljs-code">`int`</span><br><span class="hljs-bullet">-</span> <span class="hljs-strong">**Single value:**</span> <span class="hljs-code">`type=str`</span>, <span class="hljs-code">`required=True/False`</span>, explicit <span class="hljs-code">`default=...`</span><br><span class="hljs-bullet">-</span> <span class="hljs-strong">**Multiple occurrences:**</span> <span class="hljs-code">`action=&#x27;append&#x27;`</span> -&gt; <span class="hljs-code">`Optional[List[str]]`</span><br><br><span class="hljs-section">#### Positional Arguments</span><br><br><span class="hljs-bullet">-</span> <span class="hljs-strong">**Exactly one:**</span> simple positional<br><span class="hljs-bullet">-</span> <span class="hljs-strong">**0/1 (optional):**</span> <span class="hljs-code">`nargs=&#x27;?&#x27;`</span>, must be last positional argument<br><span class="hljs-bullet">-</span> <span class="hljs-strong">**0 or more/1 or more:**</span> <span class="hljs-code">`nargs=&#x27;*&#x27;`</span>/<span class="hljs-code">`nargs=&#x27;+&#x27;`</span>, with plural argument name and singular <span class="hljs-code">`metavar`</span>, must be last positional argument<br><br><span class="hljs-section">## Python Packaging &amp; Distribution</span><br><br><span class="hljs-section">### File Layout</span><br><br><span class="hljs-bullet">-</span> All files start with a copyright and license block:<br><span class="hljs-bullet">    -</span> Boilerplate: <span class="hljs-code">`# Copyright (c) 2025 Jifeng Wu\n# Licensed under the &lt;license&gt; License. See LICENSE file in the project root for full license information.`</span><br><span class="hljs-bullet">    -</span> simple infrastructure: MIT/BSD<br><span class="hljs-bullet">    -</span> complex infra: Apache-2.0<br><span class="hljs-bullet">    -</span> applications: AGPL-3.0<br><br><span class="hljs-section">### Required Files &amp; Metadata</span><br><br><span class="hljs-bullet">-</span> <span class="hljs-code">`README.md`</span> with standard boilerplate (see below)<br><span class="hljs-bullet">-</span> <span class="hljs-code">`LICENSE`</span><br><span class="hljs-bullet">-</span> <span class="hljs-code">`requirements.txt`</span> (see example)<br><span class="hljs-bullet">-</span> <span class="hljs-code">`pyproject.toml`</span> (see template)<br><span class="hljs-bullet">-</span> <span class="hljs-code">`setup.cfg`</span> (see template)<br><br><span class="hljs-section">### `README.md` Boilerplate</span><br><br><span class="hljs-code">```</span><br><span class="hljs-code">&lt;Project Description&gt;</span><br><span class="hljs-code"></span><br><span class="hljs-code">## Installation</span><br><span class="hljs-code"></span><br><span class="hljs-code">...</span><br><span class="hljs-code"></span><br><span class="hljs-code">## Usage</span><br><span class="hljs-code"></span><br><span class="hljs-code">...</span><br><span class="hljs-code"></span><br><span class="hljs-code">## Contributing</span><br><span class="hljs-code"></span><br><span class="hljs-code">Contributions are welcome! Please submit pull requests or open issues on the GitHub repository.</span><br><span class="hljs-code"></span><br><span class="hljs-code">## License</span><br><span class="hljs-code"></span><br><span class="hljs-code">This project is licensed under the [&lt;license&gt; License](LICENSE).</span><br><span class="hljs-code">```</span><br><br><span class="hljs-section">### Example `requirements.txt`</span><br><br><span class="hljs-code">```</span><br><span class="hljs-code">enum34; python_version &lt; &#x27;3.4&#x27;</span><br><span class="hljs-code">pyreadline</span><br><span class="hljs-code">six</span><br><span class="hljs-code">typing; python_version &lt; &#x27;3.5&#x27;</span><br><span class="hljs-code">```</span><br><br><span class="hljs-section">### `pyproject.toml` Template</span><br><br><span class="hljs-code">```</span><br><span class="hljs-code">[build-system]</span><br><span class="hljs-code">requires = [&quot;setuptools&quot;]</span><br><span class="hljs-code">build-backend = &quot;setuptools.build_meta&quot;</span><br><span class="hljs-code"></span><br><span class="hljs-code">[project]</span><br><span class="hljs-code">name = &quot;&lt;project-name&gt;&quot;</span><br><span class="hljs-code">version = &quot;&lt;version&gt;&quot;</span><br><span class="hljs-code">description = &quot;&lt;Project Description&gt;&quot;</span><br><span class="hljs-code">readme = &quot;README.md&quot;</span><br><span class="hljs-code">requires-python = &quot;&gt;=2&quot;</span><br><span class="hljs-code">license = &quot;&lt;license&gt;&quot;</span><br><span class="hljs-code">authors = [</span><br><span class="hljs-code">  &#123; name=&quot;Jifeng Wu&quot;, email=&quot;jifengwu2k@gmail.com&quot; &#125;</span><br><span class="hljs-code">]</span><br><span class="hljs-code">classifiers = [</span><br><span class="hljs-code">    &quot;Programming Language :: Python :: 2&quot;,</span><br><span class="hljs-code">    &quot;Programming Language :: Python :: 3&quot;,</span><br><span class="hljs-code">    &quot;Operating System :: OS Independent&quot;,</span><br><span class="hljs-code">]</span><br><span class="hljs-code">dependencies = [</span><br><span class="hljs-code">    &quot;&lt;requirements.txt line 1&gt;&quot;,</span><br><span class="hljs-code">    &quot;&lt;requirements.txt line 2&gt;&quot;,</span><br><span class="hljs-code">    &quot;&lt;requirements.txt line 3&gt;&quot;</span><br><span class="hljs-code">]</span><br><span class="hljs-code"></span><br><span class="hljs-code">[project.urls]</span><br><span class="hljs-code">&quot;Homepage&quot; = &quot;https://github.com/jifengwu2k/&lt;project-name&gt;&quot;</span><br><span class="hljs-code">&quot;Bug Tracker&quot; = &quot;https://github.com/jifengwu2k/&lt;project-name&gt;/issues&quot;</span><br><span class="hljs-code">```</span><br><br>Replace <span class="hljs-code">`&lt;project-name&gt;`</span>, <span class="hljs-code">`&lt;version&gt;`</span>, <span class="hljs-code">`&lt;license&gt;`</span>, and requirements as appropriate.<br><br><span class="hljs-section">### `setup.cfg` Template</span><br><br><span class="hljs-code">```</span><br><span class="hljs-code">[bdist_wheel]</span><br><span class="hljs-code">universal = 1</span><br><span class="hljs-code">```</span><br></code></pre></td></tr></table></figure><h1 id="checking">Checking</h1><p>Ensure you meet the following prerequisites:</p><ul><li>Your Python project is a Git repository.</li><li>You have <code>pbpaste</code> properly set up.</li></ul><p>Execute the following to generate an LLM prompt:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs bash">LLM_PROMPT_FILE=<span class="hljs-string">&#x27;llm_prompt.txt&#x27;</span><br><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;This is my Python project:&quot;</span> &gt; <span class="hljs-string">&quot;<span class="hljs-variable">$&#123;LLM_PROMPT_FILE&#125;</span>&quot;</span><br><span class="hljs-built_in">echo</span> &gt;&gt; <span class="hljs-string">&quot;<span class="hljs-variable">$&#123;LLM_PROMPT_FILE&#125;</span>&quot;</span><br><br>git ls-files --others --exclude-standard --cached | grep -v <span class="hljs-string">&#x27;.gitignore&#x27;</span> | grep -v <span class="hljs-string">&quot;<span class="hljs-variable">$&#123;LLM_PROMPT_FILE&#125;</span>&quot;</span> | <span class="hljs-keyword">while</span> <span class="hljs-built_in">read</span> file<br><span class="hljs-keyword">do</span><br>    <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;\`<span class="hljs-variable">$&#123;file&#125;</span>\`:&quot;</span><br>    <span class="hljs-built_in">echo</span><br>    <span class="hljs-built_in">cat</span> <span class="hljs-string">&quot;<span class="hljs-variable">$&#123;file&#125;</span>&quot;</span><br>    <span class="hljs-built_in">echo</span><br><span class="hljs-keyword">done</span> &gt;&gt; <span class="hljs-string">&quot;<span class="hljs-variable">$&#123;LLM_PROMPT_FILE&#125;</span>&quot;</span><br><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;Please do a code review and assess whether the code complies with these guidelines:&quot;</span> &gt;&gt; <span class="hljs-string">&quot;<span class="hljs-variable">$&#123;LLM_PROMPT_FILE&#125;</span>&quot;</span><br><span class="hljs-built_in">echo</span> &gt;&gt; <span class="hljs-string">&quot;<span class="hljs-variable">$&#123;LLM_PROMPT_FILE&#125;</span>&quot;</span><br></code></pre></td></tr></table></figure><p>Copy some or all of the above guidelines.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">pbpaste &gt;&gt; <span class="hljs-string">&quot;<span class="hljs-variable">$&#123;LLM_PROMPT_FILE&#125;</span>&quot;</span><br></code></pre></td></tr></table></figure><p>Feed that LLM prompt into your LLM of choice. Then<code>rm $&#123;LLM_PROMPT_FILE&#125;</code>.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;Philosophy:&lt;/p&gt;
&lt;p&gt;We have exceptionally strict coding standards.&lt;/p&gt;
&lt;p&gt;But we explicitly use them in tandem with LLMs.&lt;/p&gt;</summary>
      
    
    
    
    <category term="Reference" scheme="https://jifengwu2k.github.io/categories/Reference/"/>
    
    
  </entry>
  
  <entry>
    <title>简易运动</title>
    <link href="https://jifengwu2k.github.io/2025/08/29/%E7%AE%80%E6%98%93%E8%BF%90%E5%8A%A8/"/>
    <id>https://jifengwu2k.github.io/2025/08/29/%E7%AE%80%E6%98%93%E8%BF%90%E5%8A%A8/</id>
    <published>2025-08-29T04:00:00.000Z</published>
    <updated>2025-10-04T16:44:24.853Z</updated>
    
    <content type="html"><![CDATA[<h2 id="全身运动">全身运动</h2><ul><li><ahref="https://www.youtube.com/watch?v=QDIx22h2TBc">八段锦</a></li><li><ahref="https://www.youtube.com/watch?v=RAsmxj6W2R0">八部金刚功</a></li></ul><h2 id="面部运动">面部运动</h2><ul><li><a href="/static/videos/瘦鼻训练.mp4">瘦鼻训练</a></li><li><a href="/static/videos/改善双下巴.mp4">改善双下巴</a></li><li><ahref="/static/videos/双下巴不是胖！每天3分钟下颌线越练越清晰！（播音训练）.mp4">双下巴不是胖！每天3分钟下颌线越练越清晰！（播音训练）</a></li></ul><h2 id="臀腿运动">臀腿运动</h2><ul><li><ahref="/static/videos/这种腿型的都去练‼️这个动作很炸裂🔥.mp4">这种腿型的都去练‼️这个动作很炸裂🔥</a></li></ul><h2id="凯格尔运动仅供教育用途请手动替换链接">凯格尔运动（仅供教育用途，请手动替换链接）</h2><h3 id="基础凯格尔运动">基础凯格尔运动</h3><ul><li><code>/view_video.php?viewkey=ph62f3e9b2bc880</code></li><li><code>/view_video.php?viewkey=ph611acfca7e5be</code></li><li><code>/view_video.php?viewkey=ph61ea4e4b90ef0</code></li></ul><h3 id="凯格尔复合运动">凯格尔复合运动</h3><ul><li><code>/view_video.php?viewkey=ph6197d0beeff54&amp;pkey=10810581</code></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;全身运动&quot;&gt;全身运动&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a
href=&quot;https://www.youtube.com/watch?v=QDIx22h2TBc&quot;&gt;八段锦&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a
href=&quot;https://www.youtube.com/wat</summary>
      
    
    
    
    <category term="Lifestyle" scheme="https://jifengwu2k.github.io/categories/Lifestyle/"/>
    
    
  </entry>
  
  <entry>
    <title>Philosophical Idioms</title>
    <link href="https://jifengwu2k.github.io/2025/08/27/Philosophical-Idioms/"/>
    <id>https://jifengwu2k.github.io/2025/08/27/Philosophical-Idioms/</id>
    <published>2025-08-27T04:00:00.000Z</published>
    <updated>2025-10-04T16:42:35.845Z</updated>
    
    <content type="html"><![CDATA[<h2 id="cutting-through-the-nonsense">Cutting Through the Nonsense</h2><blockquote><p>“艾玛，这不就是咱们屯子里的那个……吗？”</p></blockquote><ul><li>"Ain't that just that ... from our neck o' the woods?"</li></ul><blockquote><p>"... is by definition ..."</p></blockquote><ul><li>Literal: “……从定义上讲/从本质上说是……</li><li>Idiomatic: “……说白了就是……”</li></ul><blockquote><p>"That's a feature, not a bug."</p></blockquote><ul><li>Literal: “那是功能，不是缺陷。”</li><li>Idiomatic: “这是设计好的，不是整劈叉了。”</li></ul><h2 id="your-situation-shapes-your-views">Your Situation Shapes YourViews</h2><blockquote><p>“屁股决定脑袋。”</p></blockquote><ul><li>Literal: "Your ass determines your head."</li><li>Idiomatic: "Where you stand depends on where you sit." (A classicU.S. political saying with the same idea.)</li></ul><h2 id="pragmatism-and-results-driven-thinking">Pragmatism andResults-Driven Thinking</h2><blockquote><p>“实践是检验真理的唯一标准。”</p></blockquote><ul><li>Literal: "Practice is the sole criterion for testing truth."</li><li>Idiomatic: "Actions are the ultimate test of truth."</li></ul><blockquote><p>“不管黑猫白猫，能捉到老鼠就是好猫。”</p></blockquote><ul><li>Literal: "No matter whether it's a black cat or a white cat, as longas it catches mice, it's a good cat."</li><li>Idiomatic: "If it gets the job done, it's good enough."</li></ul><h2 id="knowing-who-you-are-doing-your-own-thing">Knowing Who You Are&amp; Doing Your Own Thing</h2><blockquote><p>“认清自己几斤几两。” “撒泡尿照照自己。”</p></blockquote><ul><li>Literal: "Recognize how many pounds and ounces you weigh." / "Take apiss and look at yourself in it."</li><li>Idiomatic: "Who do you think you are?"</li></ul><blockquote><p>“你们没有资格说，你们从实力地位出发同……谈话。”</p></blockquote><ul><li>"You do not have the qualification to say that you want to speak to... from a position of strength."</li></ul><blockquote><p>“我蛮夷也，不与中国之号谥。”</p></blockquote><ul><li>Literal: "I'm a barbarian; I do not accept the designations of theCentral Kingdom."</li><li>Idiomatic: "I'm a barbarian. I don't play by your rules."</li></ul><blockquote><p>“入关之后自有大儒为我辩经。”</p></blockquote><ul><li>Literal: "After entering the pass, there will naturally be greatscholars to argue scriptures on my behalf."</li><li>Idiomatic: "Let the philosophers debate after I've made mymove."</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;cutting-through-the-nonsense&quot;&gt;Cutting Through the Nonsense&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;“艾玛，这不就是咱们屯子里的那个……吗？”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&quot;Ai</summary>
      
    
    
    
    <category term="Linguistics and Literature" scheme="https://jifengwu2k.github.io/categories/Linguistics-and-Literature/"/>
    
    
  </entry>
  
  <entry>
    <title>Manipulating PDFs from the Unix Command Line</title>
    <link href="https://jifengwu2k.github.io/2025/08/27/Manipulating-PDFs-from-the-Unix-Command-Line/"/>
    <id>https://jifengwu2k.github.io/2025/08/27/Manipulating-PDFs-from-the-Unix-Command-Line/</id>
    <published>2025-08-27T04:00:00.000Z</published>
    <updated>2025-10-04T16:38:06.161Z</updated>
    
    <content type="html"><![CDATA[<p>The <a href="https://poppler.freedesktop.org/">Poppler utilities</a>provide many Unix command-line tools for manipulating PDFs. Installvia:</p><ul><li><code>sudo apt-get install poppler-utils</code> (Ubuntu)</li><li><code>sudo apk add poppler-utils</code> (Alpine)</li><li><code>brew install poppler</code> (macOS)</li></ul><h2 id="extract-text-from-a-pdf">Extract Text from a PDF</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">pdftotext input.pdf output.txt<br></code></pre></td></tr></table></figure><h2 id="merge-pdfs-together">Merge PDFs Together</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">pdfunite file1.pdf file2.pdf merged.pdf<br></code></pre></td></tr></table></figure><h2 id="split-extract-pages-from-a-pdf">Split (Extract) Pages from aPDF</h2><p>This will split each page of <code>input.pdf</code> to<code>output_1.pdf</code>, <code>output_2.pdf</code>, etc.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">pdfseparate input.pdf output_%d.pdf<br></code></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;The &lt;a href=&quot;https://poppler.freedesktop.org/&quot;&gt;Poppler utilities&lt;/a&gt;
provide many Unix command-line tools for manipulating PDFs. Install
</summary>
      
    
    
    
    <category term="Data Science, Multimedia, and Process Automation" scheme="https://jifengwu2k.github.io/categories/Data-Science-Multimedia-and-Process-Automation/"/>
    
    
  </entry>
  
  <entry>
    <title>Compiling C++ Code in a Conda Environment Using Conda-managed Headers and Libraries</title>
    <link href="https://jifengwu2k.github.io/2025/08/24/Compiling-C-Code-in-a-Conda-Environment-Using-Conda-managed-Headers-and-Libraries/"/>
    <id>https://jifengwu2k.github.io/2025/08/24/Compiling-C-Code-in-a-Conda-Environment-Using-Conda-managed-Headers-and-Libraries/</id>
    <published>2025-08-24T04:00:00.000Z</published>
    <updated>2025-10-04T16:34:29.350Z</updated>
    
    <content type="html"><![CDATA[<h2 id="prerequisites">Prerequisites</h2><h3 id="common-build-variables">Common Build Variables</h3><h4 id="directly-used-by-gccclang">Directly Used by<code>gcc</code>/<code>clang</code></h4><p>These environment variables are <strong>automatically used by<code>gcc</code>/<code>clang</code> themselves</strong>.</p><ul><li><code>CPATH</code><ul><li>Colon-separated list of directories to search for headers beforebuilt-in include paths.</li><li>Like passing multiple <code>-I</code> options.</li></ul></li><li><code>LIBRARY_PATH</code><ul><li>Colon-separated list of directories to search for libraries(<code>.so</code>/<code>.a</code>) at <strong>link time</strong>.</li><li>Like passing multiple <code>-L</code> options.</li><li><strong>Doesn't affect how the executable finds shared librarieswhen running.</strong></li></ul></li></ul><h4 id="for-build-systems-make-cmake-etc.">For Build Systems(<code>make</code>, <code>cmake</code>, etc.)</h4><p>These environment variables are not used by compilers<strong>unless</strong> your build tool (<code>make</code>,<code>cmake</code>, etc.) or script expands them.</p><ul><li><code>CC</code> / <code>CXX</code>:<ul><li>Which C/C++ compiler to use.</li></ul></li><li><code>CFLAGS</code> / <code>CXXFLAGS</code>:<ul><li>Extra flags for compiling C or C++ respectively, e.g.,<code>-O2 -g -Wall</code>.</li></ul></li><li><code>LDFLAGS</code>:<ul><li>Extra flags when linking, such as <code>-L/path/to/lib</code>,<code>-lfoo</code>, <code>-Wl,-rpath,/my/libs</code>.</li></ul></li></ul><blockquote><p>🚫 <strong>Never stuff include/library/link flags inside<code>$CXX</code> or <code>$CC</code>. Always set them as separatevariables, or pass them directly on the command line to thecompiler.</strong></p></blockquote><h3 id="c-libraries-in-conda-environments">C++ Libraries in CondaEnvironments</h3><p>When you install a C++ library from <code>conda-forge</code>, it'splaced inside your current environment, not in a system-widedirectory.</p><ul><li>Headers: <code>$CONDA_PREFIX/include</code></li><li>Libraries: <code>$CONDA_PREFIX/lib</code></li></ul><blockquote><p>Exception: The <strong>C runtime</strong> (<code>libc.so</code>,<code>libm.so</code>, etc.) always comes from the system, not Conda.</p></blockquote><h2 id="example">Example</h2><h3 id="create-a-conda-environment-for-c-compilation">Create a CondaEnvironment for C++ Compilation</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">conda create -n clangxx-env -y<br>conda activate clangxx-env<br>conda install -c conda-forge clang clangxx libcxx libcxxabi libcxx-devel -y<br></code></pre></td></tr></table></figure><ul><li><code>libcxx</code>, <code>libcxxabi</code>,<code>libcxx-devel</code>: LLVM's C++ standard library and headers.</li></ul><h3 id="tell-the-compiler-where-to-look-for-headers-and-libraries">Tellthe Compiler Where to Look for Headers and Libraries</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">export</span> CPATH=<span class="hljs-string">&quot;<span class="hljs-variable">$CONDA_PREFIX</span>/include&quot;</span><br><span class="hljs-built_in">export</span> LIBRARY_PATH=<span class="hljs-string">&quot;<span class="hljs-variable">$CONDA_PREFIX</span>/lib&quot;</span><br></code></pre></td></tr></table></figure><p>This automatically adds Conda's include and lib directories to<code>clang</code>'s search paths.</p><h3 id="set-common-build-variables-for-build-systems">Set Common BuildVariables for Build Systems</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">export</span> CC=<span class="hljs-string">&quot;clang&quot;</span><br><span class="hljs-built_in">export</span> CXX=<span class="hljs-string">&quot;clang++ -stdlib=libc++&quot;</span><br><span class="hljs-built_in">export</span> LDFLAGS=<span class="hljs-string">&quot;-Wl,-rpath,<span class="hljs-variable">$LIBRARY_PATH</span>&quot;</span><br></code></pre></td></tr></table></figure><ul><li><code>LDFLAGS</code> sets an <code>rpath</code> such that thegenerated executable or shared library will hard-code<code>LIBRARY_PATH</code> as a shared library search path.</li></ul><h3 id="compile-a-program">Compile a Program</h3><p>Let's say you have <code>hello_world.cpp</code>.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-variable">$CXX</span> hello_world.cpp -o hello_world <span class="hljs-variable">$LDFLAGS</span><br></code></pre></td></tr></table></figure><h3 id="check-your-binary">Check Your Binary</h3><p>You can check what dynamic libraries your binary depends on using<code>ldd hello_world</code>:</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs awk">$ ldd hello_world<br>    linux-vdso.so.<span class="hljs-number">1</span> (<span class="hljs-number">0</span>x00007ffd05ead000)<br>    libc++.so.<span class="hljs-number">1</span> =&gt; <span class="hljs-regexp">/home/y</span>ouruser<span class="hljs-regexp">/miniconda3/</span>envs<span class="hljs-regexp">/clangxx-env/</span>lib/libc++.so.<span class="hljs-number">1</span> (<span class="hljs-number">0</span>x000071f5b0e86000)<br>    libc++abi.so.<span class="hljs-number">1</span> =&gt; <span class="hljs-regexp">/home/y</span>ouruser<span class="hljs-regexp">/miniconda3/</span>envs<span class="hljs-regexp">/clangxx-env/</span>lib/libc++abi.so.<span class="hljs-number">1</span> (<span class="hljs-number">0</span>x000071f5b0e48000)<br>    libm.so.<span class="hljs-number">6</span> =&gt; <span class="hljs-regexp">/lib/</span>x86_64-linux-gnu/libm.so.<span class="hljs-number">6</span> (<span class="hljs-number">0</span>x000071f5b0d44000)<br>    libc.so.<span class="hljs-number">6</span> =&gt; <span class="hljs-regexp">/lib/</span>x86_64-linux-gnu/libc.so.<span class="hljs-number">6</span> (<span class="hljs-number">0</span>x000071f5b0a00000)<br>    ...<br></code></pre></td></tr></table></figure><p><strong>Good sign:</strong> For anything above <code>libc</code>, itshould point inside your Conda environment (e.g.,<code>libc++.so.1</code>), not the system.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;prerequisites&quot;&gt;Prerequisites&lt;/h2&gt;
&lt;h3 id=&quot;common-build-variables&quot;&gt;Common Build Variables&lt;/h3&gt;
&lt;h4 id=&quot;directly-used-by-gccclang&quot;&gt;Dir</summary>
      
    
    
    
    <category term="Environments" scheme="https://jifengwu2k.github.io/categories/Environments/"/>
    
    
  </entry>
  
  <entry>
    <title>Manipulating Videos Using `ffmpeg`</title>
    <link href="https://jifengwu2k.github.io/2025/08/23/Manipulating-Videos-Using-ffmpeg/"/>
    <id>https://jifengwu2k.github.io/2025/08/23/Manipulating-Videos-Using-ffmpeg/</id>
    <published>2025-08-23T04:00:00.000Z</published>
    <updated>2025-10-04T16:38:02.154Z</updated>
    
    <content type="html"><![CDATA[<h2 id="extract-a-portion-of-the-video">Extract a Portion of theVideo</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ffmpeg -ss <span class="hljs-string">&quot;<span class="hljs-variable">$start_time_in_seconds</span>&quot;</span> -i <span class="hljs-string">&quot;<span class="hljs-variable">$input</span>&quot;</span> -to <span class="hljs-string">&quot;<span class="hljs-variable">$end_time_in_seconds</span>&quot;</span> -c copy <span class="hljs-string">&quot;<span class="hljs-variable">$output</span>&quot;</span><br></code></pre></td></tr></table></figure><h2 id="reduce-a-videos-resolution-by-half">Reduce a Video's Resolutionby Half</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ffmpeg -i <span class="hljs-string">&quot;<span class="hljs-variable">$input</span>&quot;</span> -vf <span class="hljs-string">&quot;scale=iw/2:ih/2&quot;</span> -c:a copy <span class="hljs-string">&quot;<span class="hljs-variable">$output</span>&quot;</span><br></code></pre></td></tr></table></figure><ul><li>Use the <code>scale</code> filter with expressions to halve thewidth and height:<ul><li><code>iw</code> = input width, <code>ih</code> = input height.</li></ul></li><li><code>-c:a copy</code> copies the audio stream withoutre-encoding.</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;extract-a-portion-of-the-video&quot;&gt;Extract a Portion of the
Video&lt;/h2&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pr</summary>
      
    
    
    
    <category term="Data Science, Multimedia, and Process Automation" scheme="https://jifengwu2k.github.io/categories/Data-Science-Multimedia-and-Process-Automation/"/>
    
    
  </entry>
  
  <entry>
    <title>简易食谱</title>
    <link href="https://jifengwu2k.github.io/2025/08/22/%E7%AE%80%E6%98%93%E9%A3%9F%E8%B0%B1/"/>
    <id>https://jifengwu2k.github.io/2025/08/22/%E7%AE%80%E6%98%93%E9%A3%9F%E8%B0%B1/</id>
    <published>2025-08-22T04:00:00.000Z</published>
    <updated>2025-10-06T02:00:37.618Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>切忌用电饭煲在没有饭的情况下焖菜或炖菜，电饭煲盖会有大量难以清洗的残留物。</p><p>禁止像用水炖菜一样用牛奶炖菜，会导致牛奶中的蛋白凝结，显得比较恶心。</p></blockquote><h2 id="轻食">轻食</h2><ul><li><a href="/static/images/玉米鸡蛋火龙果.jpg">玉米鸡蛋火龙果</a></li><li><ahref="/static/videos/微波炉土豆鸡蛋西兰花圣女果虾仁沙拉.mp4">微波炉土豆鸡蛋西兰花圣女果虾仁沙拉</a></li></ul><h2 id="饮料">饮料</h2><ul><li><a href="/static/videos/微波炉焦糖奶茶.mp4">微波炉焦糖奶茶</a></li><li>🇨🇺 Cuba libre (<code>kuβa ˈliβɾe</code>)<ul><li>120 ml cola</li><li>50 ml white rum</li><li>10 ml Fresh lime juice</li></ul></li><li>🇨🇺 Mojito (<code>moˈxito</code>)<ul><li>45 ml white rum</li><li>20 ml fresh lime juice</li><li>6 sprigs of mint</li><li>2 teaspoons white cane sugar (or 20 ml of sugar syrup)</li><li>Soda water</li></ul></li><li>🇵🇷 Piña colada (<code>ˈpiɲa koˈlaða</code>)<ul><li>50 ml white rum</li><li>30 ml coconut cream</li><li>50 ml fresh pineapple juice</li></ul></li></ul><h2 id="主食">主食</h2><h3 id="杂粮">杂粮</h3><ul><li><a href="/static/videos/微波炉土豆泥.mp4">微波炉土豆泥</a></li><li><ahref="/static/videos/微波炉南瓜、红薯、玉米、土豆、山药.mp4">微波炉南瓜、红薯、玉米、土豆、山药</a></li><li><a href="/static/videos/微波炉蒸蜜薯.mp4">微波炉蒸蜜薯</a></li><li><ahref="/static/videos/微波炉酸辣土豆丝.mp4">微波炉酸辣土豆丝</a></li></ul><h3 id="粥汤">粥汤</h3><ul><li><a href="/static/videos/皮蛋瘦肉粥.mp4">皮蛋瘦肉粥</a></li><li>新大陆海鲜汤 (Sopa de Mariscos del Nuevo Mundo)<ul><li>海鲜 (mariscos) 2 斤 (libras)</li><li>土豆 (patatas) 1 斤 (libra)</li><li>火鸡汤 (sopa de pavo) 4 杯 (tazas)</li><li>椰奶 (leche de coco) 2 杯 (tazas)</li><li>玉米面 (masa de maiz) 1/2 杯 (taza)</li><li>葱属 (Allium) 适量 (al gusto)</li><li>辣椒面 (chile en polvo) 适量 (al gusto)</li></ul></li></ul><h3 id="面点">面点</h3><ul><li><ahref="/static/videos/绞肉机和面蒸馒头.mp4">绞肉机和面蒸馒头</a></li><li><a href="/static/videos/电饭煲恰巴塔.mp4">电饭煲恰巴塔</a></li><li><a href="/static/videos/电饭煲馅饼.mp4">电饭煲馅饼</a></li><li><a href="/static/videos/肉馅饼.mp4">肉馅饼</a></li></ul><h2 id="素菜">素菜</h2><h3 id="绿叶蔬菜">绿叶蔬菜</h3><ul><li><ahref="/static/videos/微波炉蒜蓉空心菜.mp4">微波炉蒜蓉空心菜</a></li><li><ahref="/static/videos/微波炉火腿肠娃娃菜.mp4">微波炉火腿肠娃娃菜</a></li><li><a href="/static/videos/微波炉手撕包菜.mp4">微波炉手撕包菜</a></li></ul><h3 id="其他蔬菜">其他蔬菜</h3><ul><li><a href="/static/videos/微波炉花菜.mp4">微波炉花菜</a></li><li><ahref="/static/videos/微波炉青椒擂皮蛋.mp4">微波炉青椒擂皮蛋</a></li><li><ahref="/static/videos/微波炉香菇烧青椒.mp4">微波炉香菇烧青椒</a></li></ul><h3 id="混合蔬菜">混合蔬菜</h3><ul><li><ahref="/static/videos/微波炉茄辣西（1）.mp4">微波炉茄辣西（1）</a></li><li><ahref="/static/videos/微波炉茄辣西（2）.mp4">微波炉茄辣西（2）</a></li><li><ahref="/static/videos/电饭煲地三鲜（1）.mp4">电饭煲地三鲜（1）</a></li><li><ahref="/static/videos/电饭煲地三鲜（2）.mp4">电饭煲地三鲜（2）</a></li><li><ahref="/static/videos/电饭煲炖土豆、胡萝卜、洋葱、玉米、香菇、青红椒.mp4">电饭煲炖土豆、胡萝卜、洋葱、玉米、香菇、青红椒</a></li><li><ahref="/static/videos/微波炉懒人地三鲜.mp4">微波炉懒人地三鲜</a></li></ul><h2 id="荤菜">荤菜</h2><h3 id="肉类">肉类</h3><ul><li><a href="/static/videos/微波炉盐焗鸡.mp4">微波炉盐焗鸡</a></li><li><a href="/static/videos/微波炉黄焖鸡.mp4">微波炉黄焖鸡</a></li><li><a href="/static/videos/电饭煲黄焖鸡.mp4">电饭煲黄焖鸡</a></li><li><ahref="/static/videos/电饭煲水蒸蛋、丝瓜蒸鸡腿.mp4">电饭煲水蒸蛋、丝瓜蒸鸡腿</a></li><li><a href="/static/videos/电饭煲蜜汁叉烧.mp4">电饭煲蜜汁叉烧</a></li><li><ahref="/static/videos/微波炉鸡蛋肉饼汤.mp4">微波炉鸡蛋肉饼汤</a></li><li><ahref="/static/videos/电饭煲土豆番茄焖牛肉.mp4">电饭煲土豆番茄焖牛肉</a></li><li><ahref="/static/videos/电饭煲番茄炖牛腩.mp4">电饭煲番茄炖牛腩</a></li><li><a href="/static/videos/菠萝牛肉粒.mp4">菠萝牛肉粒</a></li><li><a href="/static/videos/电饭煲蚂蚁上树.mp4">电饭煲蚂蚁上树</a></li><li><ahref="/static/videos/电饭煲西红柿炖牛腩.mp4">电饭煲西红柿炖牛腩</a></li><li><a href="/static/videos/微波炉红烧鸡腿.mp4">微波炉红烧鸡腿</a></li><li><a href="/static/videos/微波炉鸡块.mp4">微波炉鸡块</a></li><li><a href="/static/videos/微波炉洋葱牛肉.mp4">微波炉洋葱牛肉</a></li></ul><h3 id="海鲜类">海鲜类</h3><ul><li><a href="/static/videos/微波炉清蒸鱼.mp4">微波炉清蒸鱼</a></li><li><a href="/static/videos/微波炉白灼虾.mp4">微波炉白灼虾</a></li><li><a href="/static/videos/电饭煲肉蟹煲.mp4">电饭煲肉蟹煲</a></li><li><ahref="/static/videos/微波炉鱼片、金针菇.mp4">微波炉鱼片、金针菇</a></li></ul><h2 id="饭菜一锅出">饭菜一锅出</h2><h3 id="米饭类">米饭类</h3><ul><li><ahref="/static/videos/电饭煲一颗番茄焖饭.mp4">电饭煲一颗番茄焖饭</a></li><li><ahref="/static/videos/电饭煲土豆胡萝卜洋葱玉米香菇青椒鸡腿焖饭.mp4">电饭煲土豆胡萝卜洋葱玉米香菇青椒鸡腿焖饭</a></li><li><a href="/static/videos/电饭煲火锅焖饭.mp4">电饭煲火锅焖饭</a></li><li><ahref="/static/videos/电饭煲豆角土豆焖饭.mp4">电饭煲豆角土豆焖饭</a></li><li><a href="/static/videos/电饭煲豆角焖饭.mp4">电饭煲豆角焖饭</a></li><li><a href="/static/videos/电饭煲煲仔饭.mp4">电饭煲煲仔饭</a></li><li><ahref="/static/videos/电饭煲土豆、茄子、番茄、豆角焖饭.mp4">电饭煲土豆、茄子、番茄、豆角焖饭</a></li><li><a href="/static/videos/番茄鸡蛋火腿饭.mp4">番茄鸡蛋火腿饭</a></li><li><ahref="/static/videos/番茄、鸡蛋、火腿、熟米.mp4">番茄、鸡蛋、火腿、熟米</a></li></ul><h3 id="面条类">面条类</h3><ul><li><ahref="/static/videos/微波炉豆角五花肉焖面.mp4">微波炉豆角五花肉焖面</a></li><li><a href="/static/videos/电饭煲豆角焖面.mp4">电饭煲豆角焖面</a></li></ul><h3 id="其他面食类">其他面食类</h3><ul><li><ahref="/static/videos/电饭煲洋葱、蘑菇、香肠、番茄、虾仁、芝士意大利面.mp4">电饭煲洋葱、蘑菇、香肠、番茄、虾仁、芝士意大利面</a></li><li><ahref="/static/videos/电饭煲西红柿土豆泥火鸡面.mp4">电饭煲西红柿土豆泥火鸡面</a></li></ul><h2 id="食材准备">食材准备</h2><ul><li><ahref="/static/videos/微波炉豆豉、蒜末、小米辣酱.mp4">微波炉豆豉、蒜末、小米辣酱</a></li><li><a href="/static/videos/微波炉葱油.mp4">微波炉葱油</a></li><li><a href="/static/videos/微波炉熬猪油.mp4">微波炉熬猪油</a></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;切忌用电饭煲在没有饭的情况下焖菜或炖菜，电饭煲盖会有大量难以清洗的残留物。&lt;/p&gt;
&lt;p&gt;禁止像用水炖菜一样用牛奶炖菜，会导致牛奶中的蛋白凝结，显得比较恶心。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;轻食&quot;&gt;轻食&lt;/h2&gt;
&lt;ul&gt;
&lt;</summary>
      
    
    
    
    <category term="Lifestyle" scheme="https://jifengwu2k.github.io/categories/Lifestyle/"/>
    
    
  </entry>
  
  <entry>
    <title>High-Frequency Git Operations for Everyday Development</title>
    <link href="https://jifengwu2k.github.io/2025/08/21/High-Frequency-Git-Operations-for-Everyday-Development/"/>
    <id>https://jifengwu2k.github.io/2025/08/21/High-Frequency-Git-Operations-for-Everyday-Development/</id>
    <published>2025-08-22T00:43:36.000Z</published>
    <updated>2025-10-07T20:03:59.628Z</updated>
    
    <content type="html"><![CDATA[<p>Here are some of the most frequent Git operations you may need inday-to-day development.</p><h2 id="connect-your-local-folder-to-a-github-repository">Connect YourLocal Folder to a GitHub Repository</h2><h3 id="scenario">Scenario</h3><p>You have an existing local folder with files and want to connect itto an already existing GitHub repository.</p><h3 id="steps">Steps</h3><p>Initialize Git in your folder:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git init<br></code></pre></td></tr></table></figure><p>Add your GitHub repository (replace URL with your repo):</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git remote add origin https://github.com/username/repo.git<br></code></pre></td></tr></table></figure><p>Fetch remote history:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git fetch origin<br></code></pre></td></tr></table></figure><p>Merge remote and local files, allowing unrelated histories<em>(change <code>main</code> to your repo's default branch ifnecessary)</em>:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git pull origin main --allow-unrelated-histories<br></code></pre></td></tr></table></figure><p>If you see an error like:</p><blockquote><p>The following untracked working tree files would be overwritten bymerge...</p></blockquote><p>We recommend:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 1. Move local conflicting files to a temporary directory</span><br><span class="hljs-comment"># For example, back them up to a non-conflicting `backup` folder in the current directory</span><br><span class="hljs-built_in">mkdir</span> backup<br><span class="hljs-built_in">mv</span> conflicting-file-1 conflicting-file-2 backup/<br><br><span class="hljs-comment"># 2. Try pulling the remote repository content again</span><br>git pull origin main --allow-unrelated-histories<br><br><span class="hljs-comment"># 3. Manually merge the backed up files into the pulled files</span><br></code></pre></td></tr></table></figure><p>Commit after resolving all conflicts:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">git add .<br>git commit -m <span class="hljs-string">&quot;Merge local files with remote repository&quot;</span><br></code></pre></td></tr></table></figure><p>Push to the remote repository (if needed):</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git push --set-upstream origin main<br></code></pre></td></tr></table></figure><p><strong>The <code>--set-upstream origin main</code> option is onlyneeded for the first push; you don't need it afterward.</strong></p><h2 id="list-what-files-git-add-.-would-stage">List What Files<code>git add .</code> Would Stage</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git status --short<br></code></pre></td></tr></table></figure><p>Example Output:</p><figure class="highlight haxe"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs haxe">M file1.txt       <span class="hljs-meta"># modified file</span><br>?? <span class="hljs-keyword">new</span><span class="hljs-type">file</span>.txt     <span class="hljs-meta"># untracked file</span><br></code></pre></td></tr></table></figure><p>Breakdown:</p><ul><li><code>M</code> = Modified (but not staged)</li><li><code>??</code> = Untracked (new files)</li></ul><h2 id="remove-previously-committed-files-now-in-.gitignore">RemovePreviously Committed Files Now in <code>.gitignore</code></h2><h3 id="scenario-1">Scenario</h3><p>You added rules to <code>.gitignore</code> but some files werealready committed.</p><h3 id="steps-1">Steps</h3><p>Stage removal of all currently tracked files (but not deletelocally):</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git <span class="hljs-built_in">rm</span> -r --cached .<br></code></pre></td></tr></table></figure><p>Add everything back to the repo ("add" skips <code>gitignore</code>dfiles):</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git add .<br></code></pre></td></tr></table></figure><p>Commit the change:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git commit -m <span class="hljs-string">&quot;Remove ignored files from the repository&quot;</span><br></code></pre></td></tr></table></figure><p>At this point, the files are only removed from the repository<strong>from this commit onward (they'll still exist in oldercommits/history)</strong>. If you want them <strong>removed fromprevious commits as well</strong>, consider <strong>squashing multiplecommits into a single commit</strong>, as explained below.</p><h2id="list-files-added-removed-or-changed-relative-to-another-commit">ListFiles Added, Removed, or Changed Relative to Another Commit</h2><p>Run <code>git status</code> and ensure you have no unstaged changesor staged but uncommitted changes. Then, to compare the current state(HEAD) against commit <code>abcdef1</code>:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git diff --name-status --no-renames abcdef1<br></code></pre></td></tr></table></figure><p>Output looks like:</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-tag">A</span>  <span class="hljs-attribute">src</span>/new_file<span class="hljs-selector-class">.py</span><br>D  <span class="hljs-attribute">src</span>/old_file<span class="hljs-selector-class">.py</span><br>M  <span class="hljs-attribute">src</span>/changed_file<span class="hljs-selector-class">.py</span><br></code></pre></td></tr></table></figure><ul><li>Added (A): File is present in <code>HEAD</code> but not in<code>abcdef1</code>.</li><li>Deleted (D): File is present in <code>abcdef1</code>, but not in<code>HEAD</code>.</li><li>Modified (M): File exists in both, but contents changed.</li></ul><h2 id="squash-multiple-commits-into-a-single-commit">Squash MultipleCommits into a Single Commit</h2><h3 id="scenario-2">Scenario</h3><p>You have made several small commits <em>(some of which may be faultyor embarassing)</em> and want to clean up history by squashing them intoone.</p><h3 id="steps-2">Steps</h3><p>Review commit history:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git <span class="hljs-built_in">log</span><br></code></pre></td></tr></table></figure><p>Decide how many previous commits you want to squash.</p><p>Start an interactive rebase, e.g. with the last 3 commits:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git rebase -i HEAD~3<br></code></pre></td></tr></table></figure><p>In the opened editor:</p><ul><li>Leave <code>pick</code> for the first commit.</li><li>For the others, change <code>pick</code> to <code>squash</code> (orjust <code>s</code>).</li><li>Save and close.</li></ul><p>You will then enter a second editor session. Edit the combined commitmessage. Save and close.</p><p>Force-push the branch to rewrite history on GitHub:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git push --force<br></code></pre></td></tr></table></figure><h3 id="note">Note</h3><ul><li>Use squashing carefully if collaborating, as force push overwriteshistory.</li></ul><h2 id="list-branches">List Branches</h2><p>List local branches:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git branch<br></code></pre></td></tr></table></figure><p>List remote branches:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git branch -r<br></code></pre></td></tr></table></figure><p>List local and remote branches:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git branch -a<br></code></pre></td></tr></table></figure><h2 id="list-commits-in-branches">List Commits in Branches</h2><p>To list commits in the branch <code>feature</code>:</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">git <span class="hljs-built_in">log</span> feature<br></code></pre></td></tr></table></figure><h2id="copy-files-and-folders-from-another-branch-or-commit-into-your-current-working-directory">CopyFiles and Folders from Another Branch or Commit Into Your CurrentWorking Directory</h2><p>Copy files and folders from the tip of branch <code>feature</code>into your current working directory:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git checkout feature -- path/to/file path/to/folder<br></code></pre></td></tr></table></figure><p>Copy files and folders from commit <code>abcdef1</code> into yourcurrent working directory:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git checkout abcdef1 -- path/to/file path/to/folder<br></code></pre></td></tr></table></figure><h2 id="delete-a-local-branch">Delete a Local Branch</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git branch -d branch_name<br></code></pre></td></tr></table></figure><ul><li>This will refuse if the branch contains undeleted/unmergedchanges.</li></ul><h2 id="list-remotes">List Remotes</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git remote -v<br></code></pre></td></tr></table></figure><p>This will display a list of remotes with their URLs, e.g.:</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk">origin  https:<span class="hljs-regexp">//gi</span>thub.com<span class="hljs-regexp">/example/</span>repo.git (fetch)<br>origin  https:<span class="hljs-regexp">//gi</span>thub.com<span class="hljs-regexp">/example/</span>repo.git (push)<br></code></pre></td></tr></table></figure><h2 id="push-to-a-specific-remote">Push to a Specific Remote</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git push --force &lt;remote-name&gt; &lt;branch-name&gt;<br></code></pre></td></tr></table></figure><ul><li><code>&lt;remote-name&gt;</code> is the name of the remote you wantto push to (e.g., <code>origin</code>, <code>upstream</code>, etc).</li><li><code>&lt;branch-name&gt;</code> is the branch you want to push(e.g., <code>main</code>, <code>master</code>, etc).</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Here are some of the most frequent Git operations you may need in
day-to-day development.&lt;/p&gt;
&lt;h2 id=&quot;connect-your-local-folder-to-a-gith</summary>
      
    
    
    
    <category term="DevOps" scheme="https://jifengwu2k.github.io/categories/DevOps/"/>
    
    
  </entry>
  
  <entry>
    <title>Eating in the Americas - Down-to-earth Foodstuffs</title>
    <link href="https://jifengwu2k.github.io/2025/08/21/Eating-in-the-Americas-Down-to-earth-Foodstuffs/"/>
    <id>https://jifengwu2k.github.io/2025/08/21/Eating-in-the-Americas-Down-to-earth-Foodstuffs/</id>
    <published>2025-08-21T04:00:00.000Z</published>
    <updated>2025-10-04T16:44:12.220Z</updated>
    
    <content type="html"><![CDATA[<p>吃在美洲——接地气儿的食材</p><p>Eating in the Americas - Down-to-earth Foodstuffs</p><p>这些植物和动物<strong>在美洲有原生族群</strong>：</p><p>These plants and animals have <strong>populations native to theAmericas</strong>:</p><h2 id="植物-plants">植物 Plants</h2><ul><li>天门冬目 Asparagales<ul><li>天门冬科 Asparagaceae<ul><li><strong>龙舌兰属 Agave</strong></li></ul></li><li>兰科 Orchidaceae<ul><li><strong>香荚兰属 Vanilla (香草)</strong></li></ul></li></ul></li><li>菊目 Asterales<ul><li>菊科 Asteraceae<ul><li>向日葵属 Helianthus<ul><li><strong>向日葵 H. annuus (Sunflower)</strong></li></ul></li><li><strong>松果菊属 Echinacea (紫锥花 / 紫锥菊;Echinacea)</strong></li></ul></li></ul></li><li>十字花目 Brassicales<ul><li>番木瓜科 Caricaceae<ul><li>番木瓜属 Carica<ul><li><strong>番木瓜 C. papaya (Papaya)</strong></li></ul></li></ul></li></ul></li><li>石竹目 Caryophyllales<ul><li><strong>苋科 Amaranthaceae (苋菜 / 藜麦; Amaranth /Quinoa)</strong></li><li><strong>仙人掌科 Cactaceae (仙人掌 / 火龙果 / 梨果仙人掌; Cactus /Pitaya / Strawberry Pear / Dragon Fruit / Prickly Pear)</strong></li></ul></li><li>葫芦目 Cucurbitales<ul><li>葫芦科 Cucurbitaceae<ul><li><strong>南瓜属 Cucurbita (南瓜 / 西葫芦; Squash / Pumpkin /Zucchini)</strong></li><li>葫芦属 Lagenaria<ul><li><strong>葫芦 L. siceraria (Gourd)</strong></li></ul></li></ul></li></ul></li><li>杜鹃花目 Ericales<ul><li>柿树科 Ebenaceae<ul><li><strong>柿属 Diospyros (柿子 / 君迁子; Persimmon /Date-plum)</strong></li></ul></li><li>杜鹃花科 Ericaceae<ul><li><strong>越橘屬 Vaccinium (蓝莓 / 笃斯越橘 / 蔓越莓; Blueberry /Cranberry)</strong></li></ul></li></ul></li><li>豆目 Fabales<ul><li>豆科 Fabaceae<ul><li>落花生属 Arachis<ul><li><strong>花生 A. hypogaea (Peanut)</strong></li></ul></li><li>豆薯属 Pachyrhizus<ul><li><strong>凉薯 P. erosus (Jícama)</strong></li></ul></li><li>菜豆属 Phaseolus<ul><li><strong>菜豆 P. vulgaris (芸豆 / 架豆 / 刀豆 / 肾豆 / 四季豆 / 豆角;Bean)</strong></li></ul></li></ul></li></ul></li><li>壳斗目 Fagales<ul><li>桦木科 Betulaceae<ul><li><strong>榛属 Corylus (Hazelnut)</strong></li></ul></li><li>壳斗科 Fagaceae<ul><li><strong>栗属 Castanea (Chestnut)</strong></li></ul></li></ul></li><li>胡桃目 Juglandales<ul><li>胡桃科 Juglandaceae<ul><li>山核桃属 Carya<ul><li><strong>长山核桃 C. illinoinensis (碧根果 / 胡桃;Pecan)</strong></li></ul></li><li><strong>胡桃属 Juglans (核桃; Walnut)</strong></li></ul></li></ul></li><li>唇形目 Lamiales<ul><li>唇形科 Lamiaceae<ul><li><strong>鼠尾草属 Salvia (Chia / Sage; 奇亚籽)</strong></li></ul></li></ul></li><li>樟目 Laurales<ul><li>樟科 Lauraceae<ul><li>鳄梨属 Persea<ul><li><strong>鳄梨 P. americana (牛油果; Avocado)</strong></li></ul></li></ul></li></ul></li><li>金虎尾目 Malpighiales<ul><li>大戟科 Euphorbiaceae<ul><li>木薯属 Manihot<ul><li><strong>木薯 M. esculenta (Cassava / Tapioca)</strong></li></ul></li></ul></li><li>西番莲科 Passifloraceae<ul><li>西番莲属 Passiflora<ul><li><strong>西番莲 P. edulis (百香果 / 鸡蛋果; PassionFruit)</strong></li></ul></li></ul></li></ul></li><li>锦葵目 Malvales<ul><li>锦葵科 Malvaceae<ul><li><strong>棉花属 Gossypium (Cotton)</strong></li><li>可可属 Theobroma<ul><li><strong>可可 T. cacao (Cacao / Cocoa)</strong></li></ul></li></ul></li></ul></li><li>桃金娘目 Myrtales<ul><li>桃金娘科 Myrtaceae<ul><li>番石榴属 Psidium<ul><li><strong>番石榴 P. guajava (Guava)</strong></li></ul></li></ul></li></ul></li><li>禾本目 Poales<ul><li><strong>竹亚科 Bambusoideae (Bamboo / Giant Cane / RiverCane)</strong></li><li>凤梨科 Bromeliaceae<ul><li>凤梨属 Ananas<ul><li><strong>凤梨 A. comosus (菠萝; Ananas / Pineapple)</strong></li></ul></li></ul></li><li>禾本科 Poaceae<ul><li><strong>稻属 Oryza (大米; Rice)</strong></li><li><strong>稷属 Panicum (黍 / 粟 / 糜子 / 黍稷 / 糜黍 / 稷 / 黄米 /稷米 / 粢米; Millet / Panicgrass)</strong></li><li>玉米属 Zea<ul><li><strong>玉米/玉蜀黍 Z. mays (Maize / Corn)</strong></li></ul></li><li>菰属 Zizania<ul><li><strong>菰 Z. latifolia (菰米 / 茭白; Wild Rice)</strong></li></ul></li></ul></li></ul></li><li>山龙眼目 Proteales<ul><li>莲科 Nelumbonaceae<ul><li><strong>莲属 Nelumbo (Lotus)</strong></li></ul></li></ul></li><li>蔷薇目 Rosales<ul><li>桑科 Moraceae<ul><li><strong>桑属 Morus (Mulberry)</strong></li></ul></li><li>蔷薇科 Rosaceae<ul><li><strong>山楂属 Crataegus (Hawthorn / Mayhaw /May-tree)</strong></li><li><strong>草莓属 Fragaria (Strawberry)</strong></li><li><strong>李属 Prunus (Plum / Plune)</strong></li><li><strong>悬钩子属 Rubus (树莓 / 覆盆子 / 黑莓; Raspberry /Blackberry)</strong></li></ul></li></ul></li><li>无患子目 Sapindales<ul><li>漆树科 Anacardiaceae<ul><li><strong>腰果属 Anacardium (Cashew)</strong></li></ul></li><li>芸香科 Rutaceae<ul><li><strong>花椒属 Zanthoxylum (Prickly Ash)</strong></li></ul></li><li>无患子科 Sapindaceae<ul><li><strong>枫属 Acer (枫树 / 槭树; Maple)</strong></li></ul></li></ul></li><li>茄目 Solanales<ul><li>旋花科 Convolvulaceae<ul><li>番薯属 Ipomoea<ul><li><strong>番薯 I. batatas (红薯 / 紫薯 / 白薯; SweetPotato)</strong></li></ul></li><li>烟草属 Nicotiana<ul><li><strong>烟草 N. tabacum (Tobacco)</strong></li></ul></li><li>茄科 Solanaceae<ul><li>茄属 Solanum<ul><li><strong>马铃薯 S. tuberosum (Potato)</strong></li><li><strong>番茄 S. lycopersicum (Tomato)</strong></li></ul></li><li><strong>辣椒属 Capsicum (甜椒 / 辣椒; Bell Pepper / ChiliPepper)</strong></li><li>灯笼果属 Physalis<ul><li><strong>灯笼果 P. peruviana (姑娘果; Cape gooseberry / Goldenberry /Groundcherry)</strong></li></ul></li></ul></li></ul></li></ul></li><li>葡萄目 Vitales<ul><li>葡萄科 Vitaceae<ul><li><strong>葡萄属 Vitis (Grape)</strong></li></ul></li></ul></li></ul><h2 id="动物-animals">动物 Animals</h2><ul><li>日鲈目 Centrarchiformes<ul><li><strong>太阳鱼科 Centrarchidae (中国市面上常见的“鲈鱼”实为该科的Micropterus 黑鲈属; Bass)</strong></li></ul></li><li>鲈形目 Perciformes<ul><li>鲈科 Percidae<ul><li><strong>鲈属 Perca (Perch)</strong></li></ul></li></ul></li><li>鲑形目 Salmoniformes<ul><li>鲑科 Salmonidae<ul><li><strong>麻哈鱼属 Oncorhynchus (大麻哈鱼 / 虹鳟; Chinook Salmon /Chum Salmon / Coho Salmon / Dog Salmon / Pacific Salmon / Pink Salmon /Sockeye Salmon / Rainbow Trout)</strong></li></ul></li></ul></li><li><strong>鲶形目 Siluriformes (鲶鱼 / 塘虱 / 巴沙鱼; Catfish / Basa /Pangasius)</strong></li><li>雁形目 Anseriformes<ul><li><strong>鸭科 Anatidae (鸭 / 鸳鸯 / 凫 / 雁 / 鹅 / 天鹅; Duck / Goose/ Swan)</strong></li></ul></li><li>鸡形目 Galliformes<ul><li>雉科 Phasianidae<ul><li><strong>火鸡属 Meleagris (Turkey)</strong></li></ul></li></ul></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;吃在美洲——接地气儿的食材&lt;/p&gt;
&lt;p&gt;Eating in the Americas - Down-to-earth Foodstuffs&lt;/p&gt;
&lt;p&gt;这些植物和动物&lt;strong&gt;在美洲有原生族群&lt;/strong&gt;：&lt;/p&gt;
&lt;p&gt;These plants and a</summary>
      
    
    
    
    <category term="Lifestyle" scheme="https://jifengwu2k.github.io/categories/Lifestyle/"/>
    
    
  </entry>
  
  <entry>
    <title>Setting Up a Headless VNC Server for Remote Desktop Access</title>
    <link href="https://jifengwu2k.github.io/2025/08/21/Setting-Up-a-Headless-VNC-Server-for-Remote-Desktop-Access/"/>
    <id>https://jifengwu2k.github.io/2025/08/21/Setting-Up-a-Headless-VNC-Server-for-Remote-Desktop-Access/</id>
    <published>2025-08-21T04:00:00.000Z</published>
    <updated>2025-10-04T16:36:20.063Z</updated>
    
    <content type="html"><![CDATA[<p>While SSH is a staple tool and almost universally understood amongLinux users, setting up <strong>VNC for remote desktop access</strong> -especially headlessly or with virtual framebuffers - remains mysteriousto many, and for good reasons:</p><ul><li>Requires understanding of X11 and graphical sessions (DISPLAYvariables, X servers, etc.)</li><li>Needs both a VNC server and a desktop environment/windowmanager</li><li>Involves properly launching graphical sessions</li></ul><p>However, for many professionals, researchers, and IT administrators,secure remote desktop access is not just a convenience - it's aninelastic requirement. Unlike other features you can work around ordelay, robust GUI access to a remote host is sometimes the only way toget mission-critical work done. For example:</p><ul><li><strong>Work-from-home</strong> mean you need to access graphicalapplications (like IDEs, simulators, and visualization tools) installedon remote lab or office machines.</li><li><strong>Remote servers without physical monitors</strong> demand aheadless-only setup - you can't just "plug in a monitor and keyboard" tostart a desktop session.</li><li><strong>Modern GUI applications</strong> sometimes can't runeffectively via X11 forwarding (like over slow networks) and absolutelyrequire a persistent desktop session.</li></ul><p>In these scenarios, there is <strong>no substitute</strong> - theneed is inelastic. You must have a reliable, secure way to run andmanage desktops remotely. Frustratingly, most available documentation isscattered, outdated, or omits crucial details.</p><p>That's why this guide exists: to provide you with a <strong>direct,practical roadmap for setting up a robust remote desktopworkflow</strong>, no matter where you work.</p><h2 id="the-three-components-of-headless-vnc">The Three Components ofHeadless VNC</h2><p>Three key components work together to present a remote desktop viaVNC:</p><h3 id="xvfb-x-virtual-framebuffer">Xvfb (X Virtual Framebuffer)</h3><p>Xvfb is a "headless" X server that implements the X11 protocol andacts like a display server, but renders everything to memory instead ofa physical monitor.</p><h3 id="x11vnc">x11vnc</h3><p>This utility acts as a bridge, allowing VNC clients to view andinteract with an existing X server session. It:</p><ul><li>Connects to the X server's framebuffer (in this case, Xvfb'sin-memory screen)</li><li>Reads pixels from the X server, and writes mouse/keyboardevents</li><li>Presents those images to a VNC client over the network, and listensfor events</li></ul><h3 id="gui-applications">GUI Applications</h3><p>These render to Xvfb's in-memory screen instead of a physical monitorvia the <code>DISPLAY</code> environment variable.</p><h2 id="step-by-step-setup-guide">Step-by-Step Setup Guide</h2><h3 id="prerequisites-remote-host">Prerequisites (Remote Host)</h3><p>First, install the necessary packages on the <strong>remotehost</strong>:</p><ul><li><code>xvfb</code></li><li><code>x11vnc</code></li><li><code>xterm</code>, <code>icewm</code> (for demonstration purposesin this tutorial)</li></ul><p><strong>We would have to run <code>xvfb</code>, <code>x11vnc</code>,and <code>xterm</code> concurrently.</strong> For this purpose, Irecommend using <code>tmux</code> (or any other comparable tool) tomanage multiple terminal windows and persistent sessions.</p><h3 id="start-the-virtual-display-remote-host">Start the Virtual Display(Remote Host)</h3><p>In your first terminal window on the remote host, start Xvfb:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">Xvfb :1 -screen 0 800x600x16<br></code></pre></td></tr></table></figure><p>This creates a virtual X11 display number <code>:1</code> (using TCPport 6001) with resolution <code>800x600</code> and 16-bit colordepth.</p><p><strong>Xvfb has properly started only if the above command neitherlogs output nor exits after being invoked.</strong> If it logs messagesor exits immediately, there's a problem to solve before moving on.Common issues include:</p><ul><li>Port 6001 already in use (try a different display number like<code>:2</code>)</li><li>Permission issues with <code>/tmp/.X11-unix</code> directory. The<code>/tmp/.X11-unix</code> directory must be readable and writable.<strong>In some environments like WSL, this directory might beread-only, which will prevent Xvfb from starting properly.</strong></li></ul><h3 id="launch-the-vnc-server-remote-host">Launch the VNC Server (RemoteHost)</h3><p>In a second terminal window on the remote host, start x11vnc:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">x11vnc -display :1 -rfbport 5901 -localhost -forever<br></code></pre></td></tr></table></figure><p>This command:</p><ul><li>Connects to the virtual X server's framebuffer at display<code>:1</code></li><li>Listens for VNC connections on port 5901</li><li>Restricts connections to localhost only (for security, VNC is notencrypted)<ul><li><strong>Never expose VNC directly to the publicInternet!</strong></li></ul></li><li>With <code>-forever</code>, x11vnc won't exit after the last clientdisconnects</li></ul><p>After running the command:</p><ul><li>It may report <strong>authentication or password-relatederrors</strong> (which is <strong>acceptable</strong>).</li><li>But it should <strong>NOT</strong> exit after running for a while.If it exits after running for a while, there's a problem to solve beforemoving on.</li></ul><h3 id="secure-access-with-ssh-tunneling-local-machine">Secure Accesswith SSH Tunneling (Local Machine)</h3><p>VNC is not encrypted, so we'll use SSH tunneling on your<strong>local machine</strong> for security.</p><p>You can either use basic SSH port forwarding (which may beconfusing), or <ahref="https://github.com/jifengwu2k/port-tunnel-manager">set up the<code>pull_remote_port.sh</code> wrapper</a> on your <strong>localmachine</strong> to pull the remote host's port 5901 to<code>localhost:5901</code>. After <strong>cloning its GitHub repositoryand completing its prerequisites</strong>, run:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">bash pull_remote_port.sh [-p &lt;ssh_port&gt;] -u &lt;remote_user&gt; -h &lt;remote_host&gt; -r 5901 -l 5901<br></code></pre></td></tr></table></figure><p>This makes the remote host's VNC port available on your local machinevia a secure SSH tunnel.</p><h3 id="test-with-a-simple-application-remote-host">Test with a SimpleApplication (Remote Host)</h3><p>In a third terminal window on the <strong>remote host</strong>,launch a test application:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># The `DISPLAY=:1` environment variable must be set</span><br><span class="hljs-comment"># For all GUI apps you wish to appear in the VNC session</span><br><span class="hljs-built_in">export</span> DISPLAY=:1<br>xterm<br></code></pre></td></tr></table></figure><p>Now connect to your VNC server on your <strong>local machine</strong>using a VNC client (like TigerVNC, RealVNC, or Remmina) pointing to<code>localhost:5901</code>. You should see the xterm window.</p><h3 id="using-desktop-environments-remote-host">Using DesktopEnvironments (Remote Host)</h3><p>For a full desktop experience rather than just single applications,you can install a desktop environment.</p><h4 id="lightweight-options">Lightweight Options</h4><ul><li>Openbox</li><li>Fluxbox</li><li>IceWM</li><li>WindowMaker</li></ul><h4 id="full-desktop-environments">Full Desktop Environments</h4><ul><li>GNOME</li><li>KDE Plasma</li><li>MATE</li><li>Cinnamon</li><li>LXDE</li><li>LXQt</li></ul><h4 id="example-installing-and-using-icewm-remote-host">Example:Installing and Using IceWM (Remote Host)</h4><p>In the third terminal window on the <strong>remote host</strong> (theone used to launch <code>xterm</code>), quit <code>xterm</code> andstart an IceWM session:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">export</span> DISPLAY=:1<br>icewm-session<br></code></pre></td></tr></table></figure><p>Now your VNC client on your <strong>local machine</strong> will showthe complete IceWM desktop environment.</p><figure><img src="/static/images/IceWM_desktop_environment_in_VNC_client.jpg"alt="IceWM desktop environment in VNC client" /><figcaption aria-hidden="true">IceWM desktop environment in VNCclient</figcaption></figure><h3 id="important-caveat-single-instance-applications">Important Caveat:Single-Instance Applications</h3><p>Many desktop applications are designed to run <strong>only oneinstance per user account</strong>:</p><ul><li>Browsers: Firefox, Chrome/Chromium</li><li>Advanced editors: gedit, kate, geany (configurable),code/VSCode</li><li>File managers: nautilus, pcmanfm (configurable), dolphin</li><li>Document viewers: evince</li><li>Many modern GTK/Qt apps that use D-Bus for activation</li></ul><p><strong>If your remote host has a physical desktop, and such an appis already running on your physical desktop</strong>, new instances willtry to communicate with the existing instance via D-Bus,<strong>creating windows on your physical desktop instead of in yourvirtual framebuffer, even after<code>export DISPLAY=:1</code>.</strong></p><p>Solution:</p><ul><li>Ensure applications aren't already running on your main desktopbefore launching them in your VNC session.</li><li>Or use a different user account for VNC access.</li></ul><h2 id="conclusion">Conclusion</h2><p>Setting up a headless VNC server might seem complex at first, but byunderstanding the three components (Xvfb, x11vnc, and your GUIapplications) and following this recipe, you can create a reliableremote desktop solution. Remember to always use SSH tunneling forsecurity and be mindful of single-instance applications.</p><p>With this setup, you can enjoy full graphical desktop access to yourremote Linux machines, opening up possibilities for remoteadministration, development, and troubleshooting.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;While SSH is a staple tool and almost universally understood among
Linux users, setting up &lt;strong&gt;VNC for remote desktop access&lt;/strong&gt;</summary>
      
    
    
    
    <category term="Environments" scheme="https://jifengwu2k.github.io/categories/Environments/"/>
    
    
  </entry>
  
  <entry>
    <title>How to Make VS Code&#39;s Language Detection Sane (and Deterministic)</title>
    <link href="https://jifengwu2k.github.io/2025/08/12/How-to-Make-VS-Code-s-Language-Detection-Sane-and-Deterministic/"/>
    <id>https://jifengwu2k.github.io/2025/08/12/How-to-Make-VS-Code-s-Language-Detection-Sane-and-Deterministic/</id>
    <published>2025-08-12T04:00:00.000Z</published>
    <updated>2025-10-04T16:34:41.596Z</updated>
    
    <content type="html"><![CDATA[<p>Anyone who's used Visual Studio Code long enough has probably runinto some surprisingly silly (and maddening) mistakes from its automaticlanguage detection.</p><p>Things get especially annoying with temporary or scratch files: VSCode tries too hard to be clever and ends up insisting your random notesare "Groovy" or "Shell" scripts. If you're like me, you just want<strong>files with clear, non-ambiguous extensions</strong> mappedcorrectly, and everything else opened as <strong>plain text</strong>.Simpler, saner, less frustrating.</p><h2 id="the-fix-use-explicit-file-associations">The Fix: Use ExplicitFile Associations</h2><p>By explicitly listing out the extension - language bindings in your<code>settings.json</code>, you can make VS Code behave in a much morepredictable way.</p><ul><li>For every common, unambiguous extension (<code>.js</code>,<code>.py</code>, <code>.cpp</code>, etc.), set the language associationdirectly.</li><li>For ambiguous or tricky cases (like <code>.m</code> for bothObjective-C and MATLAB), don't specify anything - you can alwaysoverride them manually.</li><li>For all other files (including all extensionless files and temporaryfiles), <strong>force them to open as plain text</strong>.</li></ul><p>This means no more unwanted language features popping up, and everycommon language just works.</p><h2 id="how-to-set-it-up">How to Set It Up</h2><ol type="1"><li>Open the command palette (<code>Ctrl+Shift+P</code> /<code>Cmd+Shift+P</code>).</li><li>Type and select: <code>Preferences: Open Settings (JSON)</code></li><li>Replace any existing <code>"files.associations"</code> block in yourglobal <code>settings.json</code>:</li></ol><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;files.associations&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>        <span class="hljs-attr">&quot;Dockerfile&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;dockerfile&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;Makefile&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;makefile&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;*.abap&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;abap&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;*.bat&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;bat&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;*.bib&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;bibtex&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;*.c&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;c&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;*.cc&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;cpp&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;*.clj&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;clojure&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;*.cljc&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;clojure&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;*.cljs&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;clojure&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;*.cmd&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;bat&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;*.coffee&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;coffeescript&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;*.cpp&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;cpp&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;*.cs&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;csharp&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;*.cshtml&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;razor&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;*.css&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;css&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;*.cu&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;cuda-cpp&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;*.cuh&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;cuda-cpp&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;*.cxx&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;cpp&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;*.d&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;d&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;*.dart&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;dart&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;*.diff&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;diff&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;*.erl&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;erlang&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;*.fs&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;fsharp&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;*.fsi&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;fsharp&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;*.fsx&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;fsharp&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;*.go&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;go&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;*.groovy&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;groovy&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;*.haml&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;haml&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;*.handlebars&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;handlebars&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;*.hbs&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;handlebars&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;*.hpp&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;cpp&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;*.hrl&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;erlang&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;*.hs&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;haskell&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;*.htm&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;html&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;*.html&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;html&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;*.ini&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;ini&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;*.jade&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;jade&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;*.java&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;java&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;*.jl&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;julia&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;*.js&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;javascript&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;*.json&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;json&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;*.jsonc&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;jsonc&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;*.jsx&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;javascriptreact&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;*.less&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;less&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;*.lua&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;lua&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;*.markdown&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;markdown&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;*.md&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;markdown&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;*.ml&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;ocaml&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;*.mli&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;ocaml&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;*.mm&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;objective-cpp&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;*.p6&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;raku&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;*.pas&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;pascal&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;*.patch&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;diff&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;*.php&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;php&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;*.php4&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;php&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;*.php5&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;php&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;*.phtml&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;php&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;*.pl&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;perl&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;*.pl6&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;raku&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;*.pm&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;perl&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;*.ps1&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;powershell&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;*.psm1&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;powershell&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;*.pug&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;pug&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;*.py&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;python&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;*.r&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;r&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;*.raku&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;raku&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;*.rakumod&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;raku&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;*.rb&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;ruby&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;*.rs&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;rust&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;*.sass&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;sass&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;*.scss&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;scss&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;*.sh&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;shellscript&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;*.shader&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;shaderlab&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;*.slim&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;slim&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;*.sql&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;sql&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;*.styl&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;stylus&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;*.svelte&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;svelte&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;*.swift&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;swift&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;*.tex&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;tex&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;*.ts&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;typescript&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;*.tsx&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;typescriptreact&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;*.txt&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;plaintext&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;*.vb&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;vb&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;*.vue&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;vue&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;*.xml&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;xml&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;*.xsl&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;xsl&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;*.xslt&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;xsl&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;*.yaml&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;yaml&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;*.yml&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;yaml&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;*&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;plaintext&quot;</span><br>    <span class="hljs-punctuation">&#125;</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><p>Notice the last line: <code>"*": "plaintext"</code> - this forcesevery file <strong>not matched above</strong>, including all files withno extension, to open as plain text.</p><h3 id="why-this-is-so-much-better">Why this is so much better</h3><ul><li><strong>No more weird guesses:</strong> Scratch files stay as plaintext.</li><li><strong>You get what you expect:</strong> Every major extension getsits proper language features.</li><li><strong>You can still override manually:</strong> For rare ambiguouscases, you can still set the language from the bottom right and VS Coderemembers per file.</li></ul><h2 id="conclusion">Conclusion</h2><p>VS Code's default language detection tries to be smart, but oftenoutsmarts itself. By making associations deterministic and catching allother files as plain text, you make your workflow saner and morepredictable.</p><p>Try it out and enjoy a quieter, less-annoying VS Code!</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Anyone who&#39;s used Visual Studio Code long enough has probably run
into some surprisingly silly (and maddening) mistakes from its automati</summary>
      
    
    
    
    <category term="Environments" scheme="https://jifengwu2k.github.io/categories/Environments/"/>
    
    
  </entry>
  
</feed>
